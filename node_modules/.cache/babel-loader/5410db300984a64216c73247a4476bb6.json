{"ast":null,"code":"import axios from 'axios';\nimport { URL_DEFAULT } from '../urls/urls';\nconst token = window.localStorage.getItem('token');\nconst url = URL_DEFAULT + 'users';\nconst instance = axios.create({\n  baseURL: url,\n  headers: {\n    'Authorization': 'bearer ' + token\n  }\n});\nexport const traerTodos = () => async dispacth => {\n  const respuesta = await instance.get();\n  dispacth({\n    type: 'traer_usuarios',\n    payload: respuesta.data.users\n  });\n};\nexport const crearUsuario = (data, usuarios) => async dispacth => {\n  const instance = axios.create({\n    baseURL: URL_DEFAULT + 'users',\n    headers: {\n      'Authorization': 'bearer ' + token\n    }\n  });\n  const respuesta = await instance.post(URL_DEFAULT + 'users', data);\n  usuarios.push(respuesta.data.user);\n  dispacth({\n    type: 'crear_usuario',\n    payload: usuarios\n  });\n};\nexport const editarUsuario = data => async dispacth => {\n  const instance = axios.create({\n    baseURL: URL_DEFAULT + 'users',\n    headers: {\n      'Authorization': 'bearer ' + token\n    }\n  });\n  await instance.put(URL_DEFAULT + 'users', data);\n  const respuesta = await instance.get(URL_DEFAULT + 'users');\n  dispacth({\n    type: 'editar_usuario',\n    payload: respuesta.data.users\n  });\n};\nexport const eliminarUsuario = id => async dispacth => {\n  const instance = axios.create({\n    baseURL: URL_DEFAULT + 'users',\n    headers: {\n      'Authorization': 'bearer ' + token\n    }\n  });\n  await instance.delete(URL_DEFAULT + 'users', {\n    params: {\n      \"id\": id\n    }\n  });\n  const respuesta = await instance.get(URL_DEFAULT + 'users');\n  dispacth({\n    type: 'eliminar_usuario',\n    payload: respuesta.data.users\n  });\n};","map":{"version":3,"sources":["C:/wamp64/www/whitelabel_fe/src/actions/usuariosActions.js"],"names":["axios","URL_DEFAULT","token","window","localStorage","getItem","url","instance","create","baseURL","headers","traerTodos","dispacth","respuesta","get","type","payload","data","users","crearUsuario","usuarios","post","push","user","editarUsuario","put","eliminarUsuario","id","delete","params"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,MAAMC,KAAK,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAd;AACA,MAAMC,GAAG,GAAGL,WAAW,GAAG,OAA1B;AACA,MAAMM,QAAQ,GAAGP,KAAK,CAACQ,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAEH,GADiB;AAE1BI,EAAAA,OAAO,EAAE;AAAE,qBAAiB,YAAYR;AAA/B;AAFiB,CAAb,CAAjB;AAKA,OAAO,MAAMS,UAAU,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAEhD,QAAMC,SAAS,GAAG,MAAMN,QAAQ,CAACO,GAAT,EAAxB;AAEAF,EAAAA,QAAQ,CAAC;AACLG,IAAAA,IAAI,EAAE,gBADD;AAELC,IAAAA,OAAO,EAAEH,SAAS,CAACI,IAAV,CAAeC;AAFnB,GAAD,CAAR;AAIH,CARM;AAUP,OAAO,MAAMC,YAAY,GAAG,CAACF,IAAD,EAAOG,QAAP,KAAoB,MAAOR,QAAP,IAAoB;AAEhE,QAAML,QAAQ,GAAGP,KAAK,CAACQ,MAAN,CAAa;AAC1BC,IAAAA,OAAO,EAAER,WAAW,GAAG,OADG;AAE1BS,IAAAA,OAAO,EAAE;AAAE,uBAAiB,YAAYR;AAA/B;AAFiB,GAAb,CAAjB;AAIA,QAAMW,SAAS,GAAG,MAAMN,QAAQ,CAACc,IAAT,CAAcpB,WAAW,GAAG,OAA5B,EAAqCgB,IAArC,CAAxB;AACAG,EAAAA,QAAQ,CAACE,IAAT,CAAcT,SAAS,CAACI,IAAV,CAAeM,IAA7B;AACAX,EAAAA,QAAQ,CAAC;AACLG,IAAAA,IAAI,EAAE,eADD;AAELC,IAAAA,OAAO,EAAEI;AAFJ,GAAD,CAAR;AAIH,CAZM;AAcP,OAAO,MAAMI,aAAa,GAAIP,IAAD,IAAU,MAAOL,QAAP,IAAoB;AAEvD,QAAML,QAAQ,GAAGP,KAAK,CAACQ,MAAN,CAAa;AAC1BC,IAAAA,OAAO,EAAER,WAAW,GAAG,OADG;AAE1BS,IAAAA,OAAO,EAAE;AAAE,uBAAiB,YAAYR;AAA/B;AAFiB,GAAb,CAAjB;AAKA,QAAMK,QAAQ,CAACkB,GAAT,CAAaxB,WAAW,GAAG,OAA3B,EAAoCgB,IAApC,CAAN;AACA,QAAMJ,SAAS,GAAG,MAAMN,QAAQ,CAACO,GAAT,CAAab,WAAW,GAAG,OAA3B,CAAxB;AAEAW,EAAAA,QAAQ,CAAC;AACLG,IAAAA,IAAI,EAAE,gBADD;AAELC,IAAAA,OAAO,EAAEH,SAAS,CAACI,IAAV,CAAeC;AAFnB,GAAD,CAAR;AAIH,CAdM;AAgBP,OAAO,MAAMQ,eAAe,GAAIC,EAAD,IAAQ,MAAOf,QAAP,IAAoB;AAEvD,QAAML,QAAQ,GAAGP,KAAK,CAACQ,MAAN,CAAa;AAC1BC,IAAAA,OAAO,EAAER,WAAW,GAAG,OADG;AAE1BS,IAAAA,OAAO,EAAE;AAAE,uBAAiB,YAAYR;AAA/B;AAFiB,GAAb,CAAjB;AAKA,QAAMK,QAAQ,CAACqB,MAAT,CAAgB3B,WAAW,GAAG,OAA9B,EAAuC;AAAC4B,IAAAA,MAAM,EAAE;AAAC,YAAMF;AAAP;AAAT,GAAvC,CAAN;AAEA,QAAMd,SAAS,GAAG,MAAMN,QAAQ,CAACO,GAAT,CAAab,WAAW,GAAG,OAA3B,CAAxB;AACAW,EAAAA,QAAQ,CAAC;AACLG,IAAAA,IAAI,EAAE,kBADD;AAELC,IAAAA,OAAO,EAAEH,SAAS,CAACI,IAAV,CAAeC;AAFnB,GAAD,CAAR;AAIH,CAdM","sourcesContent":["import axios from 'axios';\r\nimport { URL_DEFAULT } from '../urls/urls';\r\nconst token = window.localStorage.getItem('token');\r\nconst url = URL_DEFAULT + 'users';\r\nconst instance = axios.create({\r\n    baseURL: url,        \r\n    headers: { 'Authorization': 'bearer ' + token }\r\n});\r\n\r\nexport const traerTodos = () => async (dispacth) => {   \r\n   \r\n    const respuesta = await instance.get();    \r\n    \r\n    dispacth({\r\n        type: 'traer_usuarios',\r\n        payload: respuesta.data.users\r\n    })\r\n}\r\n\r\nexport const crearUsuario = (data, usuarios) => async (dispacth) => {\r\n    \r\n    const instance = axios.create({\r\n        baseURL: URL_DEFAULT + 'users',        \r\n        headers: { 'Authorization': 'bearer ' + token }\r\n    });\r\n    const respuesta = await instance.post(URL_DEFAULT + 'users', data);   \r\n    usuarios.push(respuesta.data.user);\r\n    dispacth({\r\n        type: 'crear_usuario',\r\n        payload: usuarios\r\n    })\r\n}\r\n\r\nexport const editarUsuario = (data) => async (dispacth) => {\r\n    \r\n    const instance = axios.create({\r\n        baseURL: URL_DEFAULT + 'users',       \r\n        headers: { 'Authorization': 'bearer ' + token }\r\n    });\r\n\r\n    await instance.put(URL_DEFAULT + 'users', data);\r\n    const respuesta = await instance.get(URL_DEFAULT + 'users');     \r\n\r\n    dispacth({\r\n        type: 'editar_usuario',\r\n        payload: respuesta.data.users\r\n    })\r\n}\r\n\r\nexport const eliminarUsuario = (id) => async (dispacth) => {\r\n    \r\n    const instance = axios.create({\r\n        baseURL: URL_DEFAULT + 'users',\r\n        headers: { 'Authorization': 'bearer ' + token }\r\n    });\r\n\r\n    await instance.delete(URL_DEFAULT + 'users', {params: {\"id\": id }});\r\n    \r\n    const respuesta = await instance.get(URL_DEFAULT + 'users');  \r\n    dispacth({\r\n        type: 'eliminar_usuario',\r\n        payload: respuesta.data.users\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}