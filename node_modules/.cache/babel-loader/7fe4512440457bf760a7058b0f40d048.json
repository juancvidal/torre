{"ast":null,"code":"import axios from 'axios';\nimport { URL_DEFAULT } from '../urls/urls';\nconst token = window.localStorage.getItem('token');\nexport const traerRespuestas = () => async dispacth => {\n  const instance = axios.create({\n    baseURL: URL_DEFAULT + 'answers',\n    headers: {\n      'Authorization': 'bearer ' + token\n    }\n  });\n  const respuesta = await instance.get();\n  dispacth({\n    type: 'traer_respuestas',\n    payload: respuesta.data.respuestas\n  });\n};\nexport const crearRespuesta = (respuesta, respuestas) => async dispacth => {\n  const instance = axios.create({\n    baseURL: URL_DEFAULT + 'answers',\n    headers: {\n      'Authorization': 'bearer ' + token\n    }\n  });\n  const r = await instance.post(URL_DEFAULT + 'answers', respuesta);\n  respuestas.push(r.data.respuestas);\n  dispacth({\n    type: 'crear_respuesta',\n    payload: respuestas\n  });\n};\nexport const editarRespuesta = data => async dispacth => {\n  const instance = axios.create({\n    baseURL: URL_DEFAULT + 'answers',\n    headers: {\n      'Authorization': 'bearer ' + token\n    }\n  });\n  await instance.put(URL_DEFAULT + 'answers', data);\n  const respuesta = await instance.get(URL_DEFAULT + 'answers');\n  dispacth({\n    type: 'editar_respuesta',\n    payload: respuesta.data.respuestas\n  });\n};\nexport const eliminarRespuesta = id => async dispacth => {\n  const instance = axios.create({\n    baseURL: URL_DEFAULT + 'answers',\n    headers: {\n      'Authorization': 'bearer ' + token\n    }\n  });\n  await instance.delete(URL_DEFAULT + 'answers', {\n    params: {\n      \"id\": id\n    }\n  });\n  const respuesta = await instance.get(URL_DEFAULT + 'answers');\n  dispacth({\n    type: 'eliminar_pregunta',\n    payload: respuesta.data.respuestas\n  });\n};","map":{"version":3,"sources":["C:/wamp64/www/whitelabel_fe/src/actions/modulosActions.js"],"names":["axios","URL_DEFAULT","token","window","localStorage","getItem","traerRespuestas","dispacth","instance","create","baseURL","headers","respuesta","get","type","payload","data","respuestas","crearRespuesta","r","post","push","editarRespuesta","put","eliminarRespuesta","id","delete","params"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,MAAMC,KAAK,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAd;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACrD,QAAMC,QAAQ,GAAGR,KAAK,CAACS,MAAN,CAAa;AAC1BC,IAAAA,OAAO,EAAET,WAAW,GAAG,SADG;AAE1BU,IAAAA,OAAO,EAAE;AAAE,uBAAiB,YAAYT;AAA/B;AAFiB,GAAb,CAAjB;AAIA,QAAMU,SAAS,GAAG,MAAMJ,QAAQ,CAACK,GAAT,EAAxB;AACAN,EAAAA,QAAQ,CAAC;AACLO,IAAAA,IAAI,EAAE,kBADD;AAELC,IAAAA,OAAO,EAAEH,SAAS,CAACI,IAAV,CAAeC;AAFnB,GAAD,CAAR;AAIH,CAVM;AAYP,OAAO,MAAMC,cAAc,GAAG,CAACN,SAAD,EAAYK,UAAZ,KAA2B,MAAOV,QAAP,IAAoB;AAEzE,QAAMC,QAAQ,GAAGR,KAAK,CAACS,MAAN,CAAa;AAC1BC,IAAAA,OAAO,EAAET,WAAW,GAAG,SADG;AAE1BU,IAAAA,OAAO,EAAE;AAAE,uBAAiB,YAAYT;AAA/B;AAFiB,GAAb,CAAjB;AAIA,QAAMiB,CAAC,GAAG,MAAMX,QAAQ,CAACY,IAAT,CAAcnB,WAAW,GAAG,SAA5B,EAAuCW,SAAvC,CAAhB;AACAK,EAAAA,UAAU,CAACI,IAAX,CAAgBF,CAAC,CAACH,IAAF,CAAOC,UAAvB;AACAV,EAAAA,QAAQ,CAAC;AACLO,IAAAA,IAAI,EAAE,iBADD;AAELC,IAAAA,OAAO,EAAEE;AAFJ,GAAD,CAAR;AAIH,CAZM;AAcP,OAAO,MAAMK,eAAe,GAAIN,IAAD,IAAU,MAAOT,QAAP,IAAoB;AAEzD,QAAMC,QAAQ,GAAGR,KAAK,CAACS,MAAN,CAAa;AAC1BC,IAAAA,OAAO,EAAET,WAAW,GAAG,SADG;AAE1BU,IAAAA,OAAO,EAAE;AAAE,uBAAiB,YAAYT;AAA/B;AAFiB,GAAb,CAAjB;AAKA,QAAMM,QAAQ,CAACe,GAAT,CAAatB,WAAW,GAAG,SAA3B,EAAsCe,IAAtC,CAAN;AACA,QAAMJ,SAAS,GAAG,MAAMJ,QAAQ,CAACK,GAAT,CAAaZ,WAAW,GAAG,SAA3B,CAAxB;AAEAM,EAAAA,QAAQ,CAAC;AACLO,IAAAA,IAAI,EAAE,kBADD;AAELC,IAAAA,OAAO,EAAEH,SAAS,CAACI,IAAV,CAAeC;AAFnB,GAAD,CAAR;AAIH,CAdM;AAgBP,OAAO,MAAMO,iBAAiB,GAAIC,EAAD,IAAQ,MAAOlB,QAAP,IAAoB;AAEzD,QAAMC,QAAQ,GAAGR,KAAK,CAACS,MAAN,CAAa;AAC1BC,IAAAA,OAAO,EAAET,WAAW,GAAG,SADG;AAE1BU,IAAAA,OAAO,EAAE;AAAE,uBAAiB,YAAYT;AAA/B;AAFiB,GAAb,CAAjB;AAKA,QAAMM,QAAQ,CAACkB,MAAT,CAAgBzB,WAAW,GAAG,SAA9B,EAAyC;AAAE0B,IAAAA,MAAM,EAAE;AAAC,YAAMF;AAAP;AAAV,GAAzC,CAAN;AAEA,QAAMb,SAAS,GAAG,MAAMJ,QAAQ,CAACK,GAAT,CAAaZ,WAAW,GAAG,SAA3B,CAAxB;AAEAM,EAAAA,QAAQ,CAAC;AACLO,IAAAA,IAAI,EAAE,mBADD;AAELC,IAAAA,OAAO,EAAEH,SAAS,CAACI,IAAV,CAAeC;AAFnB,GAAD,CAAR;AAIH,CAfM","sourcesContent":["import axios from 'axios';\r\nimport { URL_DEFAULT } from '../urls/urls';\r\nconst token = window.localStorage.getItem('token');\r\n\r\nexport const traerRespuestas = () => async (dispacth) => {       \r\n    const instance = axios.create({\r\n        baseURL: URL_DEFAULT + 'answers',        \r\n        headers: { 'Authorization': 'bearer ' + token }\r\n    });\r\n    const respuesta = await instance.get();    \r\n    dispacth({\r\n        type: 'traer_respuestas',\r\n        payload: respuesta.data.respuestas\r\n    })\r\n}\r\n\r\nexport const crearRespuesta = (respuesta, respuestas) => async (dispacth) => {\r\n    \r\n    const instance = axios.create({\r\n        baseURL: URL_DEFAULT + 'answers',        \r\n        headers: { 'Authorization': 'bearer ' + token }\r\n    });\r\n    const r = await instance.post(URL_DEFAULT + 'answers', respuesta);      \r\n    respuestas.push(r.data.respuestas);\r\n    dispacth({\r\n        type: 'crear_respuesta',\r\n        payload: respuestas\r\n    })\r\n}\r\n\r\nexport const editarRespuesta = (data) => async (dispacth) => {\r\n    \r\n    const instance = axios.create({\r\n        baseURL: URL_DEFAULT + 'answers',       \r\n        headers: { 'Authorization': 'bearer ' + token }\r\n    });\r\n\r\n    await instance.put(URL_DEFAULT + 'answers', data);\r\n    const respuesta = await instance.get(URL_DEFAULT + 'answers');   \r\n    \r\n    dispacth({\r\n        type: 'editar_respuesta',\r\n        payload: respuesta.data.respuestas\r\n    })\r\n}\r\n\r\nexport const eliminarRespuesta = (id) => async (dispacth) => {\r\n    \r\n    const instance = axios.create({\r\n        baseURL: URL_DEFAULT + 'answers',       \r\n        headers: { 'Authorization': 'bearer ' + token }\r\n    });\r\n\r\n    await instance.delete(URL_DEFAULT + 'answers', { params: {\"id\": id }} );\r\n    \r\n    const respuesta = await instance.get(URL_DEFAULT + 'answers');  \r\n    \r\n    dispacth({\r\n        type: 'eliminar_pregunta',\r\n        payload: respuesta.data.respuestas\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}