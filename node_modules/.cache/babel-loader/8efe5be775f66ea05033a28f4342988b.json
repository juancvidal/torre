{"ast":null,"code":"export const traerPreguntas = preguntas => dispacth => {\n  dispacth({\n    type: 'traer_preguntas',\n    payload: preguntas\n  });\n};\nexport const crearPregunta = (pregunta, preguntas) => async dispacth => {\n  preguntas.push(pregunta);\n  dispacth({\n    type: 'crear_pregunta',\n    payload: usuarios\n  });\n};\n/*export const editarUsuario = (data) => async (dispacth) => {\r\n    \r\n    const instance = axios.create({\r\n        baseURL: 'http://localhost:8000/api/update',\r\n        timeout: 1000,\r\n        headers: { 'Authorization': 'Bearer ' + token }\r\n    });\r\n\r\n    await instance.post('http://localhost:8000/api/update', data);\r\n    const respuesta = await instance.get('http://localhost:8000/api/users');     \r\n\r\n    dispacth({\r\n        type: 'editar_usuario',\r\n        payload: respuesta.data.users\r\n    })\r\n}\r\n\r\nexport const eliminarUsuario = (id) => async (dispacth) => {\r\n    \r\n    const instance = axios.create({\r\n        baseURL: 'http://localhost:8000/api/delete',\r\n        timeout: 1000,\r\n        headers: { 'Authorization': 'Bearer ' + token }\r\n    });\r\n\r\n    await instance.post('http://localhost:8000/api/delete', { \"id\": id });\r\n    \r\n    const respuesta = await instance.get('http://localhost:8000/api/users');  \r\n    dispacth({\r\n        type: 'eliminar_usuario',\r\n        payload: respuesta.data.users\r\n    })\r\n}*/","map":{"version":3,"sources":["C:/wamp64/www/whitelabel_fe/src/actions/preguntasActions.js"],"names":["traerPreguntas","preguntas","dispacth","type","payload","crearPregunta","pregunta","push","usuarios"],"mappings":"AAEA,OAAO,MAAMA,cAAc,GAAIC,SAAD,IAAgBC,QAAD,IAAc;AAEvDA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAE,iBADD;AAELC,IAAAA,OAAO,EAAEH;AAFJ,GAAD,CAAR;AAIH,CANM;AAQP,OAAO,MAAMI,aAAa,GAAG,CAACC,QAAD,EAAWL,SAAX,KAAyB,MAAOC,QAAP,IAAoB;AAGtED,EAAAA,SAAS,CAACM,IAAV,CAAeD,QAAf;AACAJ,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAE,gBADD;AAELC,IAAAA,OAAO,EAAEI;AAFJ,GAAD,CAAR;AAIH,CARM;AAUP","sourcesContent":["\r\n\r\nexport const traerPreguntas = (preguntas) => (dispacth) => {       \r\n    \r\n    dispacth({\r\n        type: 'traer_preguntas',\r\n        payload: preguntas\r\n    })\r\n}\r\n\r\nexport const crearPregunta = (pregunta, preguntas) => async (dispacth) => {\r\n    \r\n   \r\n    preguntas.push(pregunta);\r\n    dispacth({\r\n        type: 'crear_pregunta',\r\n        payload: usuarios\r\n    })\r\n}\r\n\r\n/*export const editarUsuario = (data) => async (dispacth) => {\r\n    \r\n    const instance = axios.create({\r\n        baseURL: 'http://localhost:8000/api/update',\r\n        timeout: 1000,\r\n        headers: { 'Authorization': 'Bearer ' + token }\r\n    });\r\n\r\n    await instance.post('http://localhost:8000/api/update', data);\r\n    const respuesta = await instance.get('http://localhost:8000/api/users');     \r\n\r\n    dispacth({\r\n        type: 'editar_usuario',\r\n        payload: respuesta.data.users\r\n    })\r\n}\r\n\r\nexport const eliminarUsuario = (id) => async (dispacth) => {\r\n    \r\n    const instance = axios.create({\r\n        baseURL: 'http://localhost:8000/api/delete',\r\n        timeout: 1000,\r\n        headers: { 'Authorization': 'Bearer ' + token }\r\n    });\r\n\r\n    await instance.post('http://localhost:8000/api/delete', { \"id\": id });\r\n    \r\n    const respuesta = await instance.get('http://localhost:8000/api/users');  \r\n    dispacth({\r\n        type: 'eliminar_usuario',\r\n        payload: respuesta.data.users\r\n    })\r\n}*/"]},"metadata":{},"sourceType":"module"}