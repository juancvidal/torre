{"ast":null,"code":"import _classCallCheck from\"C:\\\\wamp64\\\\www\\\\whitelabel_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\wamp64\\\\www\\\\whitelabel_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\wamp64\\\\www\\\\whitelabel_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\wamp64\\\\www\\\\whitelabel_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"C:\\\\wamp64\\\\www\\\\whitelabel_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\wamp64\\\\www\\\\whitelabel_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import CKEditor from'ckeditor4-react';import'./CrearT.css';import{Link}from'react-router-dom';import{connect}from'react-redux';import*as preguntasTriviaActions from'../../../../actions/preguntasTriviaActions';var CrearPreguntaT=/*#__PURE__*/function(_Component){_inherits(CrearPreguntaT,_Component);function CrearPreguntaT(props){var _this;_classCallCheck(this,CrearPreguntaT);_this=_possibleConstructorReturn(this,_getPrototypeOf(CrearPreguntaT).call(this,props));_this.crear=function(){var data={\"texto\":_this.state.texto,\"feedback_verdadero\":document.getElementById('feedbck_positivo').value,\"feedback_negativo\":document.getElementById('feedbck_negativo').value,\"opcion_correcta\":document.getElementById('opc_correcta').value,\"subtema_id\":document.getElementById('subtemas').value,\"respuestas\":[{'texto':document.getElementById('resp1').value},{'texto':document.getElementById('resp2').value}]};_this.props.crearPreguntaT(data);};_this.showSubtemas=function(){return _this.props.subtemas.map(function(p,index){return React.createElement(\"option\",{key:index,value:p.id},p.texto);});};_this.state={texto:'<p>Escriba el <em>texto</em> de la <strong>pregunta</strong></p>'};_this.onEditorTextoChange=_this.onEditorTextoChange.bind(_assertThisInitialized(_this));return _this;}_createClass(CrearPreguntaT,[{key:\"onEditorTextoChange\",value:function onEditorTextoChange(evt){this.setState({texto:evt.editor.getData()});}},{key:\"componentDidMount\",value:function componentDidMount(){}},{key:\"render\",value:function render(){return React.createElement(\"div\",{className:\"row\"},React.createElement(\"div\",{className:\"col l12\"},React.createElement(\"div\",{className:\"card-panel\"},React.createElement(\"div\",{className:\"card-title\"},React.createElement(\"h5\",null,\"Crear pregunta\")),React.createElement(\"div\",{className:\"card-content\"},React.createElement(\"div\",{className:\"row\"},React.createElement(\"form\",{className:\"col s12\"},React.createElement(\"div\",{className:\"row\"},React.createElement(\"p\",null,\"Texto de la pregunta\"),React.createElement(CKEditor,{onBeforeLoad:function onBeforeLoad(CKEDITOR){return CKEDITOR.disableAutoInline=true;},data:this.state.texto,onChange:this.onEditorTextoChange})))))),React.createElement(\"div\",{className:\"card-panel\"},React.createElement(\"div\",{className:\"card-title\"},React.createElement(\"h5\",null,\"Feedbacks\")),React.createElement(\"div\",{className:\"card-content\"},React.createElement(\"div\",{className:\"row\"},React.createElement(\"div\",{className:\"input-field col s12\"},React.createElement(\"p\",null,\"Feedback positivo:\"),React.createElement(\"input\",{id:\"feedbck_positivo\",type:\"text\",className:\"validate\"}))),React.createElement(\"div\",{className:\"row\"},React.createElement(\"div\",{className:\"input-field col s12\"},React.createElement(\"p\",null,\"Feedback negativo:\"),React.createElement(\"input\",{id:\"feedbck_negativo\",type:\"text\",className:\"validate\"}))))),React.createElement(\"div\",{className:\"card-panel\"},React.createElement(\"div\",{className:\"card-title\"},React.createElement(\"h5\",null,\"Respuestas\")),React.createElement(\"div\",{className:\"card-content\"},React.createElement(\"div\",{className:\"row\"},React.createElement(\"div\",{className:\"input-field col s12\"},React.createElement(\"p\",null,\"Respuesta 1:\"),React.createElement(\"input\",{id:\"resp1\",type:\"text\",className:\"validate\",defaultValue:\"Verdadero\"}))),React.createElement(\"div\",{className:\"row\"},React.createElement(\"div\",{className:\"input-field col s12\"},React.createElement(\"p\",null,\"Respuesta 2:\"),React.createElement(\"input\",{id:\"resp2\",type:\"text\",className:\"validate\",defaultValue:\"Falso\"}))),React.createElement(\"div\",{className:\"row\"},React.createElement(\"div\",{className:\"input-field col s6\"},React.createElement(\"p\",null,\"Opci\\xF3n correcta:\"),React.createElement(\"select\",{id:\"opc_correcta\",className:\"browser-default\"},React.createElement(\"option\",{value:\"1\"},\"1\"),React.createElement(\"option\",{value:\"2\"},\"2\")))))),React.createElement(\"div\",{className:\"card-panel\"},React.createElement(\"div\",{className:\"card-title\"},React.createElement(\"h5\",null,\"subtema asociado\")),React.createElement(\"div\",{className:\"card-content\"},React.createElement(\"div\",{className:\"row\"},React.createElement(\"div\",{className:\"input-field col s6\"},React.createElement(\"p\",null,\"\\xBFA qu\\xE9 subtema pertenece?\"),React.createElement(\"select\",{id:\"subtemas\",className:\"browser-default\"},this.showSubtemas())))),React.createElement(\"div\",{className:\"card-action\"},React.createElement(Link,{className:\"btn btn-primary btn_opts\",onClick:this.crear,to:\"/preguntasT\"},\"Guardar\"),React.createElement(Link,{className:\"btn btn-primary btn_opts\",to:\"/preguntasT\"},\"Cancelar\")))));}}]);return CrearPreguntaT;}(Component);var mapToStateProps=function mapToStateProps(reducers){return reducers.preguntasTReducers;};export default connect(mapToStateProps,preguntasTriviaActions)(CrearPreguntaT);","map":{"version":3,"sources":["C:/wamp64/www/whitelabel_fe/src/components/dashboard/preguntasTrivia/crear/CrearPreguntaT.js"],"names":["React","Component","CKEditor","Link","connect","preguntasTriviaActions","CrearPreguntaT","props","crear","data","state","texto","document","getElementById","value","crearPreguntaT","showSubtemas","subtemas","map","p","index","id","onEditorTextoChange","bind","evt","setState","editor","getData","CKEDITOR","disableAutoInline","mapToStateProps","reducers","preguntasTReducers"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport CKEditor from 'ckeditor4-react';\r\nimport './CrearT.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport * as preguntasTriviaActions from '../../../../actions/preguntasTriviaActions';\r\n\r\nclass CrearPreguntaT extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            texto: '<p>Escriba el <em>texto</em> de la <strong>pregunta</strong></p>',\r\n\r\n        };\r\n\r\n        this.onEditorTextoChange = this.onEditorTextoChange.bind(this);\r\n\r\n    }\r\n\r\n    onEditorTextoChange(evt) {\r\n        this.setState({\r\n            texto: evt.editor.getData()\r\n        });\r\n    }\r\n\r\n    crear = () => {\r\n\r\n        let data = {\r\n            \"texto\": this.state.texto,\r\n            \"feedback_verdadero\": document.getElementById('feedbck_positivo').value,\r\n            \"feedback_negativo\": document.getElementById('feedbck_negativo').value,\r\n            \"opcion_correcta\": document.getElementById('opc_correcta').value,\r\n            \"subtema_id\": document.getElementById('subtemas').value,\r\n            \"respuestas\": [\r\n                {\r\n                    'texto': document.getElementById('resp1').value                    \r\n                },\r\n                {\r\n                    'texto': document.getElementById('resp2').value\r\n                }\r\n            ]            \r\n        }\r\n        this.props.crearPreguntaT(data);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n\r\n    }\r\n\r\n    showSubtemas = () => this.props.subtemas.map((p, index) => (\r\n        <option key={index} value={p.id}>{p.texto}</option>\r\n    ))\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col l12\">\r\n                    <div className=\"card-panel\">\r\n                        <div className=\"card-title\"><h5>Crear pregunta</h5></div>\r\n                        <div className=\"card-content\">\r\n                            <div className=\"row\">\r\n                                <form className=\"col s12\">\r\n                                    <div className=\"row\">\r\n                                        <p>Texto de la pregunta</p>\r\n                                        <CKEditor onBeforeLoad={ ( CKEDITOR ) => ( CKEDITOR.disableAutoInline = true ) }\r\n                                            data={this.state.texto}\r\n                                            onChange={this.onEditorTextoChange} />\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div className=\"card-panel\">\r\n                        <div className=\"card-title\"><h5>Feedbacks</h5></div>\r\n                        <div className=\"card-content\">\r\n                            <div className=\"row\">\r\n                                <div className=\"input-field col s12\">\r\n                                    <p>Feedback positivo:</p>\r\n                                    <input id=\"feedbck_positivo\" type=\"text\" className=\"validate\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"input-field col s12\">\r\n                                    <p>Feedback negativo:</p>\r\n                                    <input id=\"feedbck_negativo\" type=\"text\" className=\"validate\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-panel\">\r\n                        <div className=\"card-title\"><h5>Respuestas</h5></div>\r\n                        <div className=\"card-content\">\r\n                            <div className=\"row\">\r\n                                <div className=\"input-field col s12\">\r\n                                    <p>Respuesta 1:</p>\r\n                                    <input id=\"resp1\" type=\"text\" className=\"validate\" defaultValue=\"Verdadero\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"input-field col s12\">\r\n                                    <p>Respuesta 2:</p>\r\n                                    <input id=\"resp2\" type=\"text\" className=\"validate\" defaultValue=\"Falso\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"input-field col s6\">\r\n                                    <p>Opción correcta:</p>\r\n                                    <select id=\"opc_correcta\" className=\"browser-default\">\r\n                                        <option value=\"1\">1</option>\r\n                                        <option value=\"2\">2</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-panel\">\r\n                        <div className=\"card-title\"><h5>subtema asociado</h5></div>\r\n                        <div className=\"card-content\">\r\n                            <div className=\"row\">\r\n                                <div className=\"input-field col s6\">\r\n                                    <p>¿A qué subtema pertenece?</p>\r\n                                    <select id=\"subtemas\" className=\"browser-default\">\r\n                                        {this.showSubtemas()}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-action\">\r\n                            <Link className=\"btn btn-primary btn_opts\" onClick={this.crear} to='/preguntasT'>Guardar</Link>\r\n                            <Link className=\"btn btn-primary btn_opts\" to='/preguntasT'>Cancelar</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapToStateProps = (reducers) => {\r\n    return reducers.preguntasTReducers;\r\n}\r\nexport default connect(mapToStateProps, preguntasTriviaActions)(CrearPreguntaT);"]},"metadata":{},"sourceType":"module"}