{"ast":null,"code":"import _classCallCheck from\"C:\\\\wamp64\\\\www\\\\whitelabel_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\wamp64\\\\www\\\\whitelabel_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\wamp64\\\\www\\\\whitelabel_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\wamp64\\\\www\\\\whitelabel_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\wamp64\\\\www\\\\whitelabel_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import'./IndexPreguntasT.css';import{Link}from'react-router-dom';import{connect}from'react-redux';import*as preguntasTriviaActions from'../../../../actions/preguntasTriviaActions';import Spinner from'../../general/Spinner';var IndexPreguntasT=/*#__PURE__*/function(_Component){_inherits(IndexPreguntasT,_Component);function IndexPreguntasT(){var _getPrototypeOf2;var _this;_classCallCheck(this,IndexPreguntasT);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(IndexPreguntasT)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.getNombreSubtema=function(id){var nombre='';_this.props.subtemas.forEach(function(element){if(element.id==id){nombre=element.texto;}});return nombre;};_this.showTable=function(){if(_this.props.cargando)return React.createElement(Spinner,null);return React.createElement(\"div\",null,React.createElement(\"div\",{className:\"a-right\"},React.createElement(Link,{to:\"/crearPreguntaT\",id:\"crear_preguntaT\",className:\"valign-wrapper\"},React.createElement(\"i\",{className:\"material-icons\"},\"add\"),\"CREAR\")),React.createElement(\"table\",{id:\"table-users\",className:\"striped centered\"},React.createElement(\"thead\",null,React.createElement(\"tr\",null,React.createElement(\"th\",{scope:\"col\"},\"#\"),React.createElement(\"th\",{scope:\"col\"},\"Texto de la pregunta\"),React.createElement(\"th\",{scope:\"col\"},\"Feedback positivo\"),React.createElement(\"th\",{scope:\"col\"},\"Feedback negativo\"),React.createElement(\"th\",{scope:\"col\"},\"Opci\\xF3n correcta\"),React.createElement(\"th\",{scope:\"col\"},\"Subtema\"),React.createElement(\"th\",{scope:\"col\"},\"Acciones\"))),React.createElement(\"tbody\",null,_this.ponerFilas())));};_this.ponerFilas=function(){return _this.props.preguntasT.map(function(pregunta,index){return React.createElement(\"tr\",{key:pregunta.id},React.createElement(\"th\",{scope:\"row\"},index+1),React.createElement(\"td\",{dangerouslySetInnerHTML:{__html:pregunta.texto}}),React.createElement(\"td\",null,\" \",pregunta.feedback_verdadero),React.createElement(\"td\",null,\" \",pregunta.feedback_negativo),React.createElement(\"td\",null,\" \",pregunta.opcion_correcta),React.createElement(\"td\",null,_this.getNombreSubtema(pregunta.subtema_id)),React.createElement(\"td\",null,React.createElement(Link,{id:\"btn-edit\",to:{pathname:\"/editarPreguntaT\",index:index,id:pregunta.id,texto:pregunta.texto,feedback_negativo:pregunta.feedback_negativo,feedback_verdadero:pregunta.feedback_verdadero,opcion_correcta:pregunta.opcion_correcta,subtema:pregunta.subtema_id,respuesta1:pregunta.respuestas[0].texto,id_respuesta1:pregunta.respuestas[0].id,respuesta2:pregunta.respuestas[1].texto,id_respuesta2:pregunta.respuestas[1].id},className:\"valign-wrapper\"},React.createElement(\"i\",{className:\"material-icons\"},\"create\"),\"EDITAR\")));});};return _this;}_createClass(IndexPreguntasT,[{key:\"getPregunta\",value:function getPregunta(preguntasT){this.setState({preguntasT:preguntasT});}},{key:\"componentDidMount\",value:function componentDidMount(){this.props.traerPreguntasT(this.props.preguntasT);this.props.traerSubtemas();}},{key:\"user_to_edit\",value:function user_to_edit(e){console.log(e);//this.props.userToEdit(id);\n}},{key:\"render\",value:function render(){return React.createElement(\"div\",{id:\"index-preguntasT\",className:\"row\"},React.createElement(\"div\",{className:\"col l12\"},React.createElement(\"div\",{className:\"card-panel\"},React.createElement(\"div\",{className:\"card-title\"},React.createElement(\"h5\",null,\"Listado de preguntas\")),React.createElement(\"div\",{className:\"card-content\"},this.showTable()))));}}]);return IndexPreguntasT;}(Component);var mapToStateProps=function mapToStateProps(reducers){return reducers.preguntasTReducers;};export default connect(mapToStateProps,preguntasTriviaActions)(IndexPreguntasT);","map":{"version":3,"sources":["C:/wamp64/www/whitelabel_fe/src/components/dashboard/preguntasTrivia/index/IndexPreguntasT.js"],"names":["React","Component","Link","connect","preguntasTriviaActions","Spinner","IndexPreguntasT","getNombreSubtema","id","nombre","props","subtemas","forEach","element","texto","showTable","cargando","ponerFilas","preguntasT","map","pregunta","index","__html","feedback_verdadero","feedback_negativo","opcion_correcta","subtema_id","pathname","subtema","respuesta1","respuestas","id_respuesta1","respuesta2","id_respuesta2","setState","traerPreguntasT","traerSubtemas","e","console","log","mapToStateProps","reducers","preguntasTReducers"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './IndexPreguntasT.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport * as preguntasTriviaActions from '../../../../actions/preguntasTriviaActions';\r\nimport Spinner from '../../general/Spinner';\r\n\r\nclass IndexPreguntasT extends Component {\r\n\r\n    getPregunta(preguntasT) {\r\n        this.setState({\r\n            preguntasT: preguntasT\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.props.traerPreguntasT(this.props.preguntasT);\r\n        this.props.traerSubtemas();\r\n    }\r\n\r\n    user_to_edit(e) {\r\n        console.log(e);\r\n        //this.props.userToEdit(id);\r\n    }\r\n\r\n    getNombreSubtema = (id) => {\r\n        let nombre = '';\r\n        this.props.subtemas.forEach(element => {\r\n            if (element.id == id) {\r\n                nombre = element.texto\r\n            }\r\n        });\r\n        return nombre;\r\n    }\r\n\r\n    showTable = () => {\r\n        if (this.props.cargando)\r\n            return <Spinner />\r\n        return (\r\n            <div>\r\n                <div className=\"a-right\">\r\n                    <Link to='/crearPreguntaT' id=\"crear_preguntaT\" className=\"valign-wrapper\"><i className=\"material-icons\">add</i>CREAR</Link>\r\n                </div>\r\n                <table id=\"table-users\" className=\"striped centered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">#</th>                            \r\n                            <th scope=\"col\">Texto de la pregunta</th>\r\n                            <th scope=\"col\">Feedback positivo</th>\r\n                            <th scope=\"col\">Feedback negativo</th>\r\n                            <th scope=\"col\">Opción correcta</th>\r\n                            <th scope=\"col\">Subtema</th>\r\n                            <th scope=\"col\">Acciones</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.ponerFilas()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n    ponerFilas = () => this.props.preguntasT.map((pregunta, index) => (\r\n        <tr key={pregunta.id}>\r\n\r\n            <th scope=\"row\">\r\n                {index + 1}\r\n            </th>            \r\n            <td dangerouslySetInnerHTML={{ __html: pregunta.texto }} />\r\n            <td> {pregunta.feedback_verdadero}</td>\r\n            <td> {pregunta.feedback_negativo}</td>\r\n            <td> {pregunta.opcion_correcta}</td>\r\n            <td>\r\n                {this.getNombreSubtema(pregunta.subtema_id)}\r\n            </td>\r\n            <td>\r\n\r\n                <Link id=\"btn-edit\" to={{\r\n                    pathname: \"/editarPreguntaT\",\r\n                    index: index,\r\n                    id: pregunta.id,\r\n                    texto: pregunta.texto,\r\n                    feedback_negativo: pregunta.feedback_negativo,\r\n                    feedback_verdadero: pregunta.feedback_verdadero,\r\n                    opcion_correcta: pregunta.opcion_correcta,\r\n                    subtema: pregunta.subtema_id,                    \r\n                    respuesta1: pregunta.respuestas[0].texto,\r\n                    id_respuesta1: pregunta.respuestas[0].id,\r\n                    respuesta2: pregunta.respuestas[1].texto,\r\n                    id_respuesta2: pregunta.respuestas[1].id,\r\n                }} className=\"valign-wrapper\"><i className=\"material-icons\">create</i>EDITAR</Link>\r\n\r\n            </td>\r\n        </tr>\r\n\r\n    ));\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div id=\"index-preguntasT\" className=\"row\">\r\n                <div className=\"col l12\">\r\n                    <div className=\"card-panel\">\r\n                        <div className=\"card-title\"><h5>Listado de preguntas</h5></div>\r\n                        <div className=\"card-content\">\r\n                            {this.showTable()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapToStateProps = (reducers) => {\r\n    return reducers.preguntasTReducers;\r\n}\r\nexport default connect(mapToStateProps, preguntasTriviaActions)(IndexPreguntasT);"]},"metadata":{},"sourceType":"module"}