{"ast":null,"code":"import axios from 'axios';\nimport { URL_DEFAULT } from '../urls/urls';\nconst token = window.localStorage.getItem('token');\nconst url = URL_DEFAULT + 'questionsTrivia';\nconst instance = axios.create({\n  baseURL: url,\n  headers: {\n    'Authorization': 'bearer ' + token\n  }\n});\nexport const traerPreguntasT = () => async dispacth => {\n  const respuesta = await instance.get();\n  dispacth({\n    type: 'traer_preguntasT',\n    payload: respuesta.data.preguntas\n  });\n};\nexport const crearPregunta = (pregunta, preguntas) => async dispacth => {\n  const respuesta = await instance.post(url, pregunta);\n  preguntas.push(respuesta.data.pregunta);\n  dispacth({\n    type: 'crear_pregunta',\n    payload: preguntas\n  });\n};\nexport const editarPregunta = data => async dispacth => {\n  await instance.put(url, data);\n  const respuesta = await instance.get();\n  dispacth({\n    type: 'editar_pregunta',\n    payload: respuesta.data.preguntas\n  });\n};\nexport const eliminarPregunta = id => async dispacth => {\n  await instance.delete(url, {\n    params: {\n      \"id\": id\n    }\n  });\n  const respuesta = await instance.get(URL_DEFAULT + 'questions');\n  dispacth({\n    type: 'eliminar_pregunta',\n    payload: respuesta.data.preguntas\n  });\n};","map":{"version":3,"sources":["C:/wamp64/www/whitelabel_fe/src/actions/preguntasTriviaActions.js"],"names":["axios","URL_DEFAULT","token","window","localStorage","getItem","url","instance","create","baseURL","headers","traerPreguntasT","dispacth","respuesta","get","type","payload","data","preguntas","crearPregunta","pregunta","post","push","editarPregunta","put","eliminarPregunta","id","delete","params"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,MAAMC,KAAK,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAd;AACA,MAAMC,GAAG,GAAGL,WAAW,GAAG,iBAA1B;AACA,MAAMM,QAAQ,GAAGP,KAAK,CAACQ,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAEH,GADiB;AAE1BI,EAAAA,OAAO,EAAE;AAAE,qBAAiB,YAAYR;AAA/B;AAFiB,CAAb,CAAjB;AAIA,OAAO,MAAMS,eAAe,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACrD,QAAMC,SAAS,GAAG,MAAMN,QAAQ,CAACO,GAAT,EAAxB;AACAF,EAAAA,QAAQ,CAAC;AACLG,IAAAA,IAAI,EAAE,kBADD;AAELC,IAAAA,OAAO,EAAEH,SAAS,CAACI,IAAV,CAAeC;AAFnB,GAAD,CAAR;AAIH,CANM;AAQP,OAAO,MAAMC,aAAa,GAAG,CAACC,QAAD,EAAWF,SAAX,KAAyB,MAAON,QAAP,IAAoB;AAEtE,QAAMC,SAAS,GAAG,MAAMN,QAAQ,CAACc,IAAT,CAAcf,GAAd,EAAmBc,QAAnB,CAAxB;AACAF,EAAAA,SAAS,CAACI,IAAV,CAAeT,SAAS,CAACI,IAAV,CAAeG,QAA9B;AACAR,EAAAA,QAAQ,CAAC;AACLG,IAAAA,IAAI,EAAE,gBADD;AAELC,IAAAA,OAAO,EAAEE;AAFJ,GAAD,CAAR;AAIH,CARM;AAUP,OAAO,MAAMK,cAAc,GAAIN,IAAD,IAAU,MAAOL,QAAP,IAAoB;AAExD,QAAML,QAAQ,CAACiB,GAAT,CAAalB,GAAb,EAAkBW,IAAlB,CAAN;AACA,QAAMJ,SAAS,GAAG,MAAMN,QAAQ,CAACO,GAAT,EAAxB;AACAF,EAAAA,QAAQ,CAAC;AACLG,IAAAA,IAAI,EAAE,iBADD;AAELC,IAAAA,OAAO,EAAEH,SAAS,CAACI,IAAV,CAAeC;AAFnB,GAAD,CAAR;AAIH,CARM;AAUP,OAAO,MAAMO,gBAAgB,GAAIC,EAAD,IAAQ,MAAOd,QAAP,IAAoB;AAExD,QAAML,QAAQ,CAACoB,MAAT,CAAgBrB,GAAhB,EAAqB;AAAEsB,IAAAA,MAAM,EAAE;AAAC,YAAMF;AAAP;AAAV,GAArB,CAAN;AAEA,QAAMb,SAAS,GAAG,MAAMN,QAAQ,CAACO,GAAT,CAAab,WAAW,GAAG,WAA3B,CAAxB;AAEAW,EAAAA,QAAQ,CAAC;AACLG,IAAAA,IAAI,EAAE,mBADD;AAELC,IAAAA,OAAO,EAAEH,SAAS,CAACI,IAAV,CAAeC;AAFnB,GAAD,CAAR;AAIH,CAVM","sourcesContent":["import axios from 'axios';\r\nimport { URL_DEFAULT } from '../urls/urls';\r\nconst token = window.localStorage.getItem('token');\r\nconst url = URL_DEFAULT + 'questionsTrivia';\r\nconst instance = axios.create({\r\n    baseURL: url,\r\n    headers: { 'Authorization': 'bearer ' + token }\r\n});\r\nexport const traerPreguntasT = () => async (dispacth) => {   \r\n    const respuesta = await instance.get();    \r\n    dispacth({\r\n        type: 'traer_preguntasT',\r\n        payload: respuesta.data.preguntas\r\n    })\r\n}\r\n\r\nexport const crearPregunta = (pregunta, preguntas) => async (dispacth) => {    \r\n    \r\n    const respuesta = await instance.post(url, pregunta);   \r\n    preguntas.push(respuesta.data.pregunta);\r\n    dispacth({\r\n        type: 'crear_pregunta',\r\n        payload: preguntas\r\n    })\r\n}\r\n\r\nexport const editarPregunta = (data) => async (dispacth) => {\r\n    \r\n    await instance.put(url, data);\r\n    const respuesta = await instance.get();     \r\n    dispacth({\r\n        type: 'editar_pregunta',\r\n        payload: respuesta.data.preguntas\r\n    })\r\n}\r\n\r\nexport const eliminarPregunta = (id) => async (dispacth) => {\r\n   \r\n    await instance.delete(url, { params: {\"id\": id }} );\r\n    \r\n    const respuesta = await instance.get(URL_DEFAULT + 'questions');  \r\n    \r\n    dispacth({\r\n        type: 'eliminar_pregunta',\r\n        payload: respuesta.data.preguntas\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}