{"ast":null,"code":"import axios from 'axios';\nimport { URL_DEFAULT } from '../urls/urls';\nconst token = window.localStorage.getItem('token');\nconst url = URL_DEFAULT + 'questions';\nconst urlRespuestas = URL_DEFAULT + 'answers/getById';\nconst instance = axios.create({\n  baseURL: url,\n  headers: {\n    'Authorization': 'bearer ' + token\n  }\n});\nexport const traerPreguntas = () => async dispacth => {\n  dispacth({\n    type: 'cargando'\n  });\n  const preguntas = await instance.get();\n  const instance = axios.create({\n    baseURL: urlRespuestas,\n    headers: {\n      'Authorization': 'bearer ' + token\n    }\n  });\n  const respuestas = await instance.get(urlRespuestas, {\n    params: {\n      'id': id\n    }\n  });\n  dispacth({\n    type: 'traer_preguntas',\n    payload: preguntas.data.preguntas\n  });\n  dispacth({\n    type: 'traer_respuestas',\n    payload: respuestas.data.respuestas\n  });\n};\nexport const crearPregunta = (data, preguntas) => async dispacth => {\n  const respuesta = await instance.post(url, data);\n  preguntas.push(respuesta.data.pregunta);\n  dispacth({\n    type: 'crear_pregunta',\n    payload: preguntas\n  });\n};\nexport const editarPregunta = data => async dispacth => {\n  await instance.put(url, data);\n  const respuesta = await instance.get();\n  dispacth({\n    type: 'editar_pregunta',\n    payload: respuesta.data.preguntas\n  });\n};\nexport const eliminarPregunta = id => async dispacth => {\n  await instance.delete(url, {\n    params: {\n      \"id\": id\n    }\n  });\n  const respuesta = await instance.get();\n  dispacth({\n    type: 'eliminar_pregunta',\n    payload: respuesta.data.preguntas\n  });\n};\nexport const traerRespById = id => async dispacth => {};","map":{"version":3,"sources":["C:/wamp64/www/whitelabel_fe/src/actions/preguntasActions.js"],"names":["axios","URL_DEFAULT","token","window","localStorage","getItem","url","urlRespuestas","instance","create","baseURL","headers","traerPreguntas","dispacth","type","preguntas","get","respuestas","params","id","payload","data","crearPregunta","respuesta","post","push","pregunta","editarPregunta","put","eliminarPregunta","delete","traerRespById"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,MAAMC,KAAK,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAd;AACA,MAAMC,GAAG,GAAGL,WAAW,GAAG,WAA1B;AACA,MAAMM,aAAa,GAAGN,WAAW,GAAG,iBAApC;AACA,MAAMO,QAAQ,GAAGR,KAAK,CAACS,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAEJ,GADiB;AAE1BK,EAAAA,OAAO,EAAE;AAAE,qBAAiB,YAAYT;AAA/B;AAFiB,CAAb,CAAjB;AAIA,OAAO,MAAMU,cAAc,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACpDA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAE;AADD,GAAD,CAAR;AAGA,QAAMC,SAAS,GAAG,MAAMP,QAAQ,CAACQ,GAAT,EAAxB;AAEA,QAAMR,QAAQ,GAAGR,KAAK,CAACS,MAAN,CAAa;AAC1BC,IAAAA,OAAO,EAAEH,aADiB;AAE1BI,IAAAA,OAAO,EAAE;AAAE,uBAAiB,YAAYT;AAA/B;AAFiB,GAAb,CAAjB;AAIA,QAAMe,UAAU,GAAG,MAAMT,QAAQ,CAACQ,GAAT,CAAaT,aAAb,EAA4B;AAAEW,IAAAA,MAAM,EAAE;AAAC,YAAMC;AAAP;AAAV,GAA5B,CAAzB;AACAN,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAE,iBADD;AAELM,IAAAA,OAAO,EAAEL,SAAS,CAACM,IAAV,CAAeN;AAFnB,GAAD,CAAR;AAIAF,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAE,kBADD;AAELM,IAAAA,OAAO,EAAEH,UAAU,CAACI,IAAX,CAAgBJ;AAFpB,GAAD,CAAR;AAKH,CApBM;AAsBP,OAAO,MAAMK,aAAa,GAAG,CAACD,IAAD,EAAON,SAAP,KAAqB,MAAOF,QAAP,IAAoB;AAGlE,QAAMU,SAAS,GAAG,MAAMf,QAAQ,CAACgB,IAAT,CAAclB,GAAd,EAAmBe,IAAnB,CAAxB;AACAN,EAAAA,SAAS,CAACU,IAAV,CAAeF,SAAS,CAACF,IAAV,CAAeK,QAA9B;AACAb,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAE,gBADD;AAELM,IAAAA,OAAO,EAAEL;AAFJ,GAAD,CAAR;AAIH,CATM;AAWP,OAAO,MAAMY,cAAc,GAAIN,IAAD,IAAU,MAAOR,QAAP,IAAoB;AAGxD,QAAML,QAAQ,CAACoB,GAAT,CAAatB,GAAb,EAAkBe,IAAlB,CAAN;AACA,QAAME,SAAS,GAAG,MAAMf,QAAQ,CAACQ,GAAT,EAAxB;AACAH,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAE,iBADD;AAELM,IAAAA,OAAO,EAAEG,SAAS,CAACF,IAAV,CAAeN;AAFnB,GAAD,CAAR;AAIH,CATM;AAWP,OAAO,MAAMc,gBAAgB,GAAIV,EAAD,IAAQ,MAAON,QAAP,IAAoB;AAGxD,QAAML,QAAQ,CAACsB,MAAT,CAAgBxB,GAAhB,EAAqB;AAAEY,IAAAA,MAAM,EAAE;AAAC,YAAMC;AAAP;AAAV,GAArB,CAAN;AAEA,QAAMI,SAAS,GAAG,MAAMf,QAAQ,CAACQ,GAAT,EAAxB;AAEAH,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAE,mBADD;AAELM,IAAAA,OAAO,EAAEG,SAAS,CAACF,IAAV,CAAeN;AAFnB,GAAD,CAAR;AAIH,CAXM;AAaP,OAAO,MAAMgB,aAAa,GAAIZ,EAAD,IAAQ,MAAON,QAAP,IAAoB,CAExD,CAFM","sourcesContent":["import axios from 'axios';\r\nimport { URL_DEFAULT } from '../urls/urls';\r\nconst token = window.localStorage.getItem('token');\r\nconst url = URL_DEFAULT + 'questions';\r\nconst urlRespuestas = URL_DEFAULT + 'answers/getById';\r\nconst instance = axios.create({\r\n    baseURL: url,\r\n    headers: { 'Authorization': 'bearer ' + token }\r\n});\r\nexport const traerPreguntas = () => async (dispacth) => {       \r\n    dispacth({\r\n        type: 'cargando',        \r\n    })\r\n    const preguntas = await instance.get();  \r\n    \r\n    const instance = axios.create({\r\n        baseURL: urlRespuestas,\r\n        headers: { 'Authorization': 'bearer ' + token }        \r\n    });\r\n    const respuestas = await instance.get(urlRespuestas, { params: {'id': id} });\r\n    dispacth({\r\n        type: 'traer_preguntas',\r\n        payload: preguntas.data.preguntas\r\n    })\r\n    dispacth({\r\n        type: 'traer_respuestas',\r\n        payload: respuestas.data.respuestas\r\n    })\r\n\r\n}\r\n\r\nexport const crearPregunta = (data, preguntas) => async (dispacth) => {\r\n    \r\n   \r\n    const respuesta = await instance.post(url, data);   \r\n    preguntas.push(respuesta.data.pregunta);\r\n    dispacth({\r\n        type: 'crear_pregunta',\r\n        payload: preguntas\r\n    })\r\n}\r\n\r\nexport const editarPregunta = (data) => async (dispacth) => {\r\n    \r\n\r\n    await instance.put(url, data);\r\n    const respuesta = await instance.get();     \r\n    dispacth({\r\n        type: 'editar_pregunta',\r\n        payload: respuesta.data.preguntas\r\n    })\r\n}\r\n\r\nexport const eliminarPregunta = (id) => async (dispacth) => {\r\n   \r\n   \r\n    await instance.delete(url, { params: {\"id\": id }} );\r\n    \r\n    const respuesta = await instance.get();  \r\n    \r\n    dispacth({\r\n        type: 'eliminar_pregunta',\r\n        payload: respuesta.data.preguntas\r\n    })\r\n}\r\n\r\nexport const traerRespById = (id) => async (dispacth) => {       \r\n    \r\n}"]},"metadata":{},"sourceType":"module"}