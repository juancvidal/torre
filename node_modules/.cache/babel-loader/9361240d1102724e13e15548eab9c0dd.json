{"ast":null,"code":"import axios from 'axios';\nimport { URL_DEFAULT } from '../urls/urls';\nconst token = window.localStorage.getItem('token');\nconst url = URL_DEFAULT + 'questions';\nconst urlRespuestas = URL_DEFAULT + 'answers/getById';\nconst instance = axios.create({\n  baseURL: url,\n  headers: {\n    'Authorization': 'bearer ' + token\n  }\n});\nexport const traerPreguntas = () => async dispacth => {\n  dispacth({\n    type: 'cargando'\n  });\n  const respuesta = await instance.get();\n  dispacth({\n    type: 'traer_preguntas',\n    payload: respuesta.data.preguntas\n  });\n};\nexport const crearPregunta = (data, preguntas) => async dispacth => {\n  const respuesta = await instance.post(url, data);\n  preguntas.push(respuesta.data.pregunta);\n  dispacth({\n    type: 'crear_pregunta',\n    payload: preguntas\n  });\n};\nexport const editarPregunta = data => async dispacth => {\n  await instance.put(url, data);\n  const respuesta = await instance.get();\n  dispacth({\n    type: 'editar_pregunta',\n    payload: respuesta.data.preguntas\n  });\n};\nexport const eliminarPregunta = id => async dispacth => {\n  await instance.delete(url, {\n    params: {\n      \"id\": id\n    }\n  });\n  const respuesta = await instance.get();\n  dispacth({\n    type: 'eliminar_pregunta',\n    payload: respuesta.data.preguntas\n  });\n};\nexport const traerRespById = id => async dispacth => {\n  const instance = axios.create({\n    baseURL: urlRespuestas,\n    headers: {\n      'Authorization': 'bearer ' + token\n    }\n  });\n  const respuesta = await instance.get(urlRespuestas, {\n    params: {\n      'id': id\n    }\n  });\n  let positions = [];\n  let texts = [];\n  let scores = [];\n  let ids = [];\n  let respuestas = respuesta.data.respuestas;\n  respuestas.map(r => {\n    ids.push(r.id);\n    positions.push(r.posicion);\n    texts.push(r.texto);\n    scores.push(r.puntaje);\n  });\n  dispacth({\n    type: 'clear_all_values',\n    payload: []\n  });\n  dispacth({\n    type: 'traer_respuestas',\n    payload: respuesta.data.respuestas\n  });\n  dispacth({\n    type: 'set_positions',\n    payload: positions\n  });\n  dispacth({\n    type: 'set_texts',\n    payload: texts\n  });\n  dispacth({\n    type: 'set_scores',\n    payload: scores\n  });\n  dispacth({\n    type: 'set_ids',\n    payload: ids\n  });\n};\nexport const clearPositionsDefaults = () => async dispacth => {\n  dispacth({\n    type: 'clear_position_defaults',\n    payload: []\n  });\n};\nexport const clearScoresDefaults = () => async dispacth => {\n  dispacth({\n    type: 'clear_scores_defaults',\n    payload: []\n  });\n};\nexport const clearAllValues = () => async dispacth => {\n  dispacth({\n    type: 'clear_all_values',\n    payload: []\n  });\n};\nexport const changeTextValues = (index, value, texts) => async dispacth => {\n  let textos = texts.slice();\n  textos[index] = value;\n  dispacth({\n    type: 'change_texts_values',\n    payload: textos\n  });\n};","map":{"version":3,"sources":["C:/wamp64/www/whitelabel_fe/src/actions/preguntasActions.js"],"names":["axios","URL_DEFAULT","token","window","localStorage","getItem","url","urlRespuestas","instance","create","baseURL","headers","traerPreguntas","dispacth","type","respuesta","get","payload","data","preguntas","crearPregunta","post","push","pregunta","editarPregunta","put","eliminarPregunta","id","delete","params","traerRespById","positions","texts","scores","ids","respuestas","map","r","posicion","texto","puntaje","clearPositionsDefaults","clearScoresDefaults","clearAllValues","changeTextValues","index","value","textos","slice"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { URL_DEFAULT } from '../urls/urls';\r\nconst token = window.localStorage.getItem('token');\r\nconst url = URL_DEFAULT + 'questions';\r\nconst urlRespuestas = URL_DEFAULT + 'answers/getById';\r\nconst instance = axios.create({\r\n    baseURL: url,\r\n    headers: { 'Authorization': 'bearer ' + token }\r\n});\r\nexport const traerPreguntas = () => async (dispacth) => {       \r\n    dispacth({\r\n        type: 'cargando',        \r\n    })\r\n    const respuesta = await instance.get();\r\n    dispacth({\r\n        type: 'traer_preguntas',\r\n        payload: respuesta.data.preguntas\r\n    })\r\n}\r\n\r\nexport const crearPregunta = (data, preguntas) => async (dispacth) => {\r\n    \r\n   \r\n    const respuesta = await instance.post(url, data);   \r\n    preguntas.push(respuesta.data.pregunta);\r\n    dispacth({\r\n        type: 'crear_pregunta',\r\n        payload: preguntas\r\n    })\r\n}\r\n\r\nexport const editarPregunta = (data) => async (dispacth) => {\r\n    \r\n\r\n    await instance.put(url, data);\r\n    const respuesta = await instance.get();     \r\n    dispacth({\r\n        type: 'editar_pregunta',\r\n        payload: respuesta.data.preguntas\r\n    })\r\n}\r\n\r\nexport const eliminarPregunta = (id) => async (dispacth) => {\r\n   \r\n   \r\n    await instance.delete(url, { params: {\"id\": id }} );\r\n    \r\n    const respuesta = await instance.get();  \r\n    \r\n    dispacth({\r\n        type: 'eliminar_pregunta',\r\n        payload: respuesta.data.preguntas\r\n    })\r\n}\r\n\r\nexport const traerRespById = (id) => async (dispacth) => {       \r\n    const instance = axios.create({\r\n        baseURL: urlRespuestas,\r\n        headers: { 'Authorization': 'bearer ' + token }        \r\n    });\r\n    const respuesta = await instance.get(urlRespuestas, { params: {'id': id} });\r\n    let positions = [];\r\n    let texts = [];\r\n    let scores = [];\r\n    let ids = [];\r\n    let respuestas = respuesta.data.respuestas;\r\n    respuestas.map((r) => {\r\n        ids.push(r.id);\r\n        positions.push(r.posicion);\r\n        texts.push(r.texto);\r\n        scores.push(r.puntaje);\r\n    })\r\n    dispacth({\r\n        type: 'clear_all_values',\r\n        payload: []\r\n    })\r\n    dispacth({\r\n        type: 'traer_respuestas',\r\n        payload: respuesta.data.respuestas\r\n    })\r\n    dispacth({\r\n        type: 'set_positions',\r\n        payload: positions\r\n    })\r\n    dispacth({\r\n        type: 'set_texts',\r\n        payload: texts\r\n    })\r\n    dispacth({\r\n        type: 'set_scores',\r\n        payload: scores\r\n    })\r\n    dispacth({\r\n        type: 'set_ids',\r\n        payload: ids\r\n    })\r\n\r\n}\r\n\r\nexport const clearPositionsDefaults = () => async (dispacth) => {       \r\n    \r\n    dispacth({\r\n        type: 'clear_position_defaults',\r\n        payload: []\r\n    })\r\n   \r\n}\r\n\r\nexport const clearScoresDefaults = () => async (dispacth) => {       \r\n    \r\n    dispacth({\r\n        type: 'clear_scores_defaults',\r\n        payload: []\r\n    })\r\n   \r\n}\r\n\r\nexport const clearAllValues = () => async (dispacth) => {       \r\n    \r\n    dispacth({\r\n        type: 'clear_all_values',\r\n        payload: []\r\n    })\r\n   \r\n}\r\n\r\nexport const changeTextValues = (index, value, texts) => async (dispacth) => {       \r\n    let textos = texts.slice();\r\n    textos[index] = value;\r\n    dispacth({\r\n        type: 'change_texts_values',\r\n        payload: textos\r\n    })\r\n   \r\n}"]},"metadata":{},"sourceType":"module"}