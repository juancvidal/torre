{"ast":null,"code":"import axios from 'axios';\nimport { URL_DEFAULT } from '../urls/urls';\nconst token = window.localStorage.getItem('token');\nconst url = URL_DEFAULT + 'questionsTrivia';\nconst urlSubtemas = URL_DEFAULT + 'modulos';\nconst instance = axios.create({\n  baseURL: url,\n  headers: {\n    'Authorization': 'bearer ' + token\n  }\n});\nexport const traerPreguntasT = () => async dispacth => {\n  dispacth({\n    type: 'cargando'\n  });\n  const respuesta = await instance.get();\n  dispacth({\n    type: 'traer_preguntasT',\n    payload: respuesta.data.preguntas\n  });\n};\nexport const traerSubtemas = () => async dispacth => {\n  const instance = axios.create({\n    baseURL: urlModulos,\n    headers: {\n      'Authorization': 'bearer ' + token\n    }\n  });\n  const respuesta = await instance.get();\n  dispacth({\n    type: 'traer_modulos',\n    payload: respuesta.data.modulos\n  });\n};\nexport const crearPreguntaT = pregunta => async dispacth => {\n  const respuesta = await instance.post(url, pregunta);\n};\nexport const editarPreguntaT = data => async dispacth => {\n  await instance.put(url, data);\n  const respuesta = await instance.get();\n  dispacth({\n    type: 'editar_preguntaT',\n    payload: respuesta.data.preguntas\n  });\n};\nexport const eliminarPreguntaT = id => async dispacth => {\n  await instance.delete(url, {\n    params: {\n      \"id\": id\n    }\n  });\n  const respuesta = await instance.get(url);\n  dispacth({\n    type: 'eliminar_preguntaT',\n    payload: respuesta.data.preguntas\n  });\n};","map":{"version":3,"sources":["C:/wamp64/www/whitelabel_fe/src/actions/preguntasTriviaActions.js"],"names":["axios","URL_DEFAULT","token","window","localStorage","getItem","url","urlSubtemas","instance","create","baseURL","headers","traerPreguntasT","dispacth","type","respuesta","get","payload","data","preguntas","traerSubtemas","urlModulos","modulos","crearPreguntaT","pregunta","post","editarPreguntaT","put","eliminarPreguntaT","id","delete","params"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,MAAMC,KAAK,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAd;AACA,MAAMC,GAAG,GAAGL,WAAW,GAAG,iBAA1B;AACA,MAAMM,WAAW,GAAGN,WAAW,GAAG,SAAlC;AACA,MAAMO,QAAQ,GAAGR,KAAK,CAACS,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAEJ,GADiB;AAE1BK,EAAAA,OAAO,EAAE;AAAE,qBAAiB,YAAYT;AAA/B;AAFiB,CAAb,CAAjB;AAIA,OAAO,MAAMU,eAAe,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACrDA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAE;AADD,GAAD,CAAR;AAGA,QAAMC,SAAS,GAAG,MAAMP,QAAQ,CAACQ,GAAT,EAAxB;AACAH,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAE,kBADD;AAELG,IAAAA,OAAO,EAAEF,SAAS,CAACG,IAAV,CAAeC;AAFnB,GAAD,CAAR;AAIH,CATM;AAWP,OAAO,MAAMC,aAAa,GAAG,MAAM,MAAOP,QAAP,IAAoB;AACnD,QAAML,QAAQ,GAAGR,KAAK,CAACS,MAAN,CAAa;AAC1BC,IAAAA,OAAO,EAAEW,UADiB;AAE1BV,IAAAA,OAAO,EAAE;AAAE,uBAAiB,YAAYT;AAA/B;AAFiB,GAAb,CAAjB;AAIA,QAAMa,SAAS,GAAG,MAAMP,QAAQ,CAACQ,GAAT,EAAxB;AACAH,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAE,eADD;AAELG,IAAAA,OAAO,EAAEF,SAAS,CAACG,IAAV,CAAeI;AAFnB,GAAD,CAAR;AAIH,CAVM;AAYP,OAAO,MAAMC,cAAc,GAAIC,QAAD,IAAc,MAAOX,QAAP,IAAoB;AAE5D,QAAME,SAAS,GAAG,MAAMP,QAAQ,CAACiB,IAAT,CAAcnB,GAAd,EAAmBkB,QAAnB,CAAxB;AAEH,CAJM;AAMP,OAAO,MAAME,eAAe,GAAIR,IAAD,IAAU,MAAOL,QAAP,IAAoB;AAEzD,QAAML,QAAQ,CAACmB,GAAT,CAAarB,GAAb,EAAkBY,IAAlB,CAAN;AACA,QAAMH,SAAS,GAAG,MAAMP,QAAQ,CAACQ,GAAT,EAAxB;AACAH,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAE,kBADD;AAELG,IAAAA,OAAO,EAAEF,SAAS,CAACG,IAAV,CAAeC;AAFnB,GAAD,CAAR;AAIH,CARM;AAUP,OAAO,MAAMS,iBAAiB,GAAIC,EAAD,IAAQ,MAAOhB,QAAP,IAAoB;AAEzD,QAAML,QAAQ,CAACsB,MAAT,CAAgBxB,GAAhB,EAAqB;AAAEyB,IAAAA,MAAM,EAAE;AAAC,YAAMF;AAAP;AAAV,GAArB,CAAN;AAEA,QAAMd,SAAS,GAAG,MAAMP,QAAQ,CAACQ,GAAT,CAAaV,GAAb,CAAxB;AAEAO,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAE,oBADD;AAELG,IAAAA,OAAO,EAAEF,SAAS,CAACG,IAAV,CAAeC;AAFnB,GAAD,CAAR;AAIH,CAVM","sourcesContent":["import axios from 'axios';\r\nimport { URL_DEFAULT } from '../urls/urls';\r\nconst token = window.localStorage.getItem('token');\r\nconst url = URL_DEFAULT + 'questionsTrivia';\r\nconst urlSubtemas = URL_DEFAULT + 'modulos';\r\nconst instance = axios.create({\r\n    baseURL: url,\r\n    headers: { 'Authorization': 'bearer ' + token }\r\n});\r\nexport const traerPreguntasT = () => async (dispacth) => {   \r\n    dispacth({\r\n        type: 'cargando'        \r\n    })\r\n    const respuesta = await instance.get();    \r\n    dispacth({\r\n        type: 'traer_preguntasT',\r\n        payload: respuesta.data.preguntas\r\n    })\r\n}\r\n\r\nexport const traerSubtemas = () => async (dispacth) => {       \r\n    const instance = axios.create({\r\n        baseURL: urlModulos,\r\n        headers: { 'Authorization': 'bearer ' + token }\r\n    });\r\n    const respuesta = await instance.get();    \r\n    dispacth({\r\n        type: 'traer_modulos',\r\n        payload: respuesta.data.modulos\r\n    })\r\n}\r\n\r\nexport const crearPreguntaT = (pregunta) => async (dispacth) => {    \r\n    \r\n    const respuesta = await instance.post(url, pregunta);   \r\n    \r\n}\r\n\r\nexport const editarPreguntaT = (data) => async (dispacth) => {\r\n    \r\n    await instance.put(url, data);\r\n    const respuesta = await instance.get();     \r\n    dispacth({\r\n        type: 'editar_preguntaT',\r\n        payload: respuesta.data.preguntas\r\n    })\r\n}\r\n\r\nexport const eliminarPreguntaT = (id) => async (dispacth) => {\r\n   \r\n    await instance.delete(url, { params: {\"id\": id }} );\r\n    \r\n    const respuesta = await instance.get(url);  \r\n    \r\n    dispacth({\r\n        type: 'eliminar_preguntaT',\r\n        payload: respuesta.data.preguntas\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}