{"ast":null,"code":"import axios from 'axios';\nimport { URL_DEFAULT } from '../urls/urls';\nconst token = window.localStorage.getItem('token');\nconst url = URL_DEFAULT + 'questions';\nconst urlModulos = URL_DEFAULT + 'modulos';\nconst urlRespuestas = URL_DEFAULT + 'answers/getById';\nconst instance = axios.create({\n  baseURL: url,\n  headers: {\n    'Authorization': 'bearer ' + token\n  }\n});\nexport const traerPreguntas = () => async dispacth => {\n  dispacth({\n    type: 'cargando'\n  });\n  dispacth({\n    type: 'clear_all_values',\n    payload: []\n  });\n  const respuesta = await instance.get();\n  console.log(respuesta.data.preguntas);\n  dispacth({\n    type: 'traer_preguntas',\n    payload: respuesta.data.preguntas\n  });\n};\nexport const traerModulos = () => async dispacth => {\n  const instance = axios.create({\n    baseURL: urlModulos,\n    headers: {\n      'Authorization': 'bearer ' + token\n    }\n  });\n  const respuesta = await instance.get();\n  dispacth({\n    type: 'traer_modulos',\n    payload: respuesta.data.modulos\n  });\n};\nexport const crearPregunta = data => async dispacth => {\n  const respuesta = await instance.post(url, data);\n};\nexport const editarPregunta = data => async dispacth => {\n  await instance.put(url, data);\n  const respuesta = await instance.get();\n  dispacth({\n    type: 'editar_pregunta',\n    payload: respuesta.data.preguntas\n  });\n  dispacth({\n    type: 'clear_all_values',\n    payload: []\n  });\n};\nexport const eliminarPregunta = id => async dispacth => {\n  await instance.delete(url, {\n    params: {\n      \"id\": id\n    }\n  });\n  const respuesta = await instance.get();\n  dispacth({\n    type: 'eliminar_pregunta',\n    payload: respuesta.data.preguntas\n  });\n};\nexport const traerRespById = id => async dispacth => {\n  const instance = axios.create({\n    baseURL: urlRespuestas,\n    headers: {\n      'Authorization': 'bearer ' + token\n    }\n  });\n  const respuesta = await instance.get(urlRespuestas, {\n    params: {\n      'id': id\n    }\n  });\n  let positions = [];\n  let texts = [];\n  let scores = [];\n  let ids = [];\n  let respuestas = respuesta.data.respuestas;\n  respuestas.map(r => {\n    ids.push(r.id);\n    positions.push(r.posicion);\n    texts.push(r.texto);\n    scores.push(r.puntaje);\n  });\n  dispacth({\n    type: 'clear_all_values',\n    payload: []\n  });\n  dispacth({\n    type: 'traer_respuestas',\n    payload: respuesta.data.respuestas\n  });\n  dispacth({\n    type: 'set_positions',\n    payload: positions\n  });\n  dispacth({\n    type: 'set_texts',\n    payload: texts\n  });\n  dispacth({\n    type: 'set_scores',\n    payload: scores\n  });\n  dispacth({\n    type: 'set_ids',\n    payload: ids\n  });\n};\nexport const clearPositionsDefaults = () => async dispacth => {\n  dispacth({\n    type: 'clear_position_defaults',\n    payload: []\n  });\n};\nexport const clearScoresDefaults = () => async dispacth => {\n  dispacth({\n    type: 'clear_scores_defaults',\n    payload: []\n  });\n};\nexport const clearAllValues = () => async dispacth => {\n  dispacth({\n    type: 'clear_all_values',\n    payload: []\n  });\n};\nexport const changeTextValues = (index, value, texts) => async dispacth => {\n  let textos = texts.slice();\n  textos[index] = value;\n  dispacth({\n    type: 'change_texts_values',\n    payload: textos\n  });\n};","map":{"version":3,"sources":["C:/wamp64/www/whitelabel_fe/src/actions/preguntasActions.js"],"names":["axios","URL_DEFAULT","token","window","localStorage","getItem","url","urlModulos","urlRespuestas","instance","create","baseURL","headers","traerPreguntas","dispacth","type","payload","respuesta","get","console","log","data","preguntas","traerModulos","modulos","crearPregunta","post","editarPregunta","put","eliminarPregunta","id","delete","params","traerRespById","positions","texts","scores","ids","respuestas","map","r","push","posicion","texto","puntaje","clearPositionsDefaults","clearScoresDefaults","clearAllValues","changeTextValues","index","value","textos","slice"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { URL_DEFAULT } from '../urls/urls';\r\nconst token = window.localStorage.getItem('token');\r\nconst url = URL_DEFAULT + 'questions';\r\nconst urlModulos = URL_DEFAULT + 'modulos';\r\nconst urlRespuestas = URL_DEFAULT + 'answers/getById';\r\nconst instance = axios.create({\r\n    baseURL: url,\r\n    headers: { 'Authorization': 'bearer ' + token }\r\n});\r\nexport const traerPreguntas = () => async (dispacth) => {       \r\n    dispacth({\r\n        type: 'cargando',        \r\n    })\r\n    dispacth({\r\n        type:'clear_all_values',\r\n        payload: []\r\n    })\r\n    const respuesta = await instance.get();\r\n    console.log(respuesta.data.preguntas)\r\n    dispacth({\r\n        type: 'traer_preguntas',\r\n        payload: respuesta.data.preguntas\r\n    })\r\n}\r\n\r\nexport const traerModulos = () => async (dispacth) => {       \r\n    const instance = axios.create({\r\n        baseURL: urlModulos,\r\n        headers: { 'Authorization': 'bearer ' + token }\r\n    });\r\n    const respuesta = await instance.get();    \r\n    dispacth({\r\n        type: 'traer_modulos',\r\n        payload: respuesta.data.modulos\r\n    })\r\n}\r\n\r\nexport const crearPregunta = (data) => async (dispacth) => {\r\n   \r\n    const respuesta = await instance.post(url, data);   \r\n}\r\n\r\nexport const editarPregunta = (data) => async (dispacth) => {\r\n    \r\n\r\n    await instance.put(url, data);\r\n    const respuesta = await instance.get();     \r\n    dispacth({\r\n        type: 'editar_pregunta',\r\n        payload: respuesta.data.preguntas\r\n    })\r\n    dispacth({\r\n        type: 'clear_all_values',\r\n        payload: []\r\n    })\r\n}\r\n\r\nexport const eliminarPregunta = (id) => async (dispacth) => {\r\n   \r\n   \r\n    await instance.delete(url, { params: {\"id\": id }} );\r\n    \r\n    const respuesta = await instance.get();  \r\n    \r\n    dispacth({\r\n        type: 'eliminar_pregunta',\r\n        payload: respuesta.data.preguntas\r\n    })\r\n}\r\n\r\nexport const traerRespById = (id) => async (dispacth) => {       \r\n    const instance = axios.create({\r\n        baseURL: urlRespuestas,\r\n        headers: { 'Authorization': 'bearer ' + token }        \r\n    });\r\n    const respuesta = await instance.get(urlRespuestas, { params: {'id': id} });\r\n    let positions = [];\r\n    let texts = [];\r\n    let scores = [];\r\n    let ids = [];\r\n    let respuestas = respuesta.data.respuestas;\r\n    respuestas.map((r) => {\r\n        ids.push(r.id);\r\n        positions.push(r.posicion);\r\n        texts.push(r.texto);\r\n        scores.push(r.puntaje);\r\n    })\r\n    dispacth({\r\n        type: 'clear_all_values',\r\n        payload: []\r\n    })\r\n    dispacth({\r\n        type: 'traer_respuestas',\r\n        payload: respuesta.data.respuestas\r\n    })\r\n    dispacth({\r\n        type: 'set_positions',\r\n        payload: positions\r\n    })\r\n    dispacth({\r\n        type: 'set_texts',\r\n        payload: texts\r\n    })\r\n    dispacth({\r\n        type: 'set_scores',\r\n        payload: scores\r\n    })\r\n    dispacth({\r\n        type: 'set_ids',\r\n        payload: ids\r\n    })\r\n\r\n}\r\n\r\nexport const clearPositionsDefaults = () => async (dispacth) => {       \r\n    \r\n    dispacth({\r\n        type: 'clear_position_defaults',\r\n        payload: []\r\n    })\r\n   \r\n}\r\n\r\nexport const clearScoresDefaults = () => async (dispacth) => {       \r\n    \r\n    dispacth({\r\n        type: 'clear_scores_defaults',\r\n        payload: []\r\n    })\r\n   \r\n}\r\n\r\nexport const clearAllValues = () => async (dispacth) => {       \r\n    \r\n    dispacth({\r\n        type: 'clear_all_values',\r\n        payload: []\r\n    })\r\n   \r\n}\r\n\r\nexport const changeTextValues = (index, value, texts) => async (dispacth) => {       \r\n    let textos = texts.slice();\r\n    textos[index] = value;\r\n    dispacth({\r\n        type: 'change_texts_values',\r\n        payload: textos\r\n    })\r\n   \r\n}"]},"metadata":{},"sourceType":"module"}