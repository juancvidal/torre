{"ast":null,"code":"import axios from 'axios';\nimport { URL_DEFAULT } from '../urls/urls';\nconst token = window.localStorage.getItem('token');\nexport const traerRespuestas = () => async dispacth => {\n  const instance = axios.create({\n    baseURL: URL_DEFAULT + 'answers',\n    headers: {\n      'Authorization': 'bearer ' + token\n    }\n  });\n  const respuesta = await instance.get();\n  dispacth({\n    type: 'traer_respuestas',\n    payload: respuesta.data.respuestas\n  });\n};\nexport const crearRespuesta = (respuesta, respuestas) => async dispacth => {\n  const instance = axios.create({\n    baseURL: URL_DEFAULT + 'answers',\n    headers: {\n      'Authorization': 'bearer ' + token\n    }\n  });\n  const r = await instance.post(URL_DEFAULT + 'answers', respuesta);\n  respuestas.push(r.data.respuestas);\n  dispacth({\n    type: 'crear_respuesta',\n    payload: r.data.respuestas\n  });\n};\nexport const editarRespuesta = (data, respuestas) => async dispacth => {\n  respuestas[data.index].texto = data.texto;\n  respuestas[data.index].id = data.id;\n  dispacth({\n    type: 'editar_respuesta',\n    payload: respuestas\n  });\n};\nexport const eliminarRespuesta = (index, respuestas) => async dispacth => {\n  respuestas.splice(index, 1);\n  dispacth({\n    type: 'eliminar_respuesta',\n    payload: respuestas\n  });\n};","map":{"version":3,"sources":["C:/wamp64/www/whitelabel_fe/src/actions/respuestasActions.js"],"names":["axios","URL_DEFAULT","token","window","localStorage","getItem","traerRespuestas","dispacth","instance","create","baseURL","headers","respuesta","get","type","payload","data","respuestas","crearRespuesta","r","post","push","editarRespuesta","index","texto","id","eliminarRespuesta","splice"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,MAAMC,KAAK,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAd;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACrD,QAAMC,QAAQ,GAAGR,KAAK,CAACS,MAAN,CAAa;AAC1BC,IAAAA,OAAO,EAAET,WAAW,GAAG,SADG;AAE1BU,IAAAA,OAAO,EAAE;AAAE,uBAAiB,YAAYT;AAA/B;AAFiB,GAAb,CAAjB;AAIA,QAAMU,SAAS,GAAG,MAAMJ,QAAQ,CAACK,GAAT,EAAxB;AACAN,EAAAA,QAAQ,CAAC;AACLO,IAAAA,IAAI,EAAE,kBADD;AAELC,IAAAA,OAAO,EAAEH,SAAS,CAACI,IAAV,CAAeC;AAFnB,GAAD,CAAR;AAIH,CAVM;AAYP,OAAO,MAAMC,cAAc,GAAG,CAACN,SAAD,EAAYK,UAAZ,KAA2B,MAAOV,QAAP,IAAoB;AAEzE,QAAMC,QAAQ,GAAGR,KAAK,CAACS,MAAN,CAAa;AAC1BC,IAAAA,OAAO,EAAET,WAAW,GAAG,SADG;AAE1BU,IAAAA,OAAO,EAAE;AAAE,uBAAiB,YAAYT;AAA/B;AAFiB,GAAb,CAAjB;AAIA,QAAMiB,CAAC,GAAG,MAAMX,QAAQ,CAACY,IAAT,CAAcnB,WAAW,GAAG,SAA5B,EAAuCW,SAAvC,CAAhB;AACAK,EAAAA,UAAU,CAACI,IAAX,CAAgBF,CAAC,CAACH,IAAF,CAAOC,UAAvB;AACAV,EAAAA,QAAQ,CAAC;AACLO,IAAAA,IAAI,EAAE,iBADD;AAELC,IAAAA,OAAO,EAAEI,CAAC,CAACH,IAAF,CAAOC;AAFX,GAAD,CAAR;AAIH,CAZM;AAcP,OAAO,MAAMK,eAAe,GAAG,CAACN,IAAD,EAAOC,UAAP,KAAsB,MAAOV,QAAP,IAAoB;AAErEU,EAAAA,UAAU,CAACD,IAAI,CAACO,KAAN,CAAV,CAAuBC,KAAvB,GAA+BR,IAAI,CAACQ,KAApC;AACAP,EAAAA,UAAU,CAACD,IAAI,CAACO,KAAN,CAAV,CAAuBE,EAAvB,GAA4BT,IAAI,CAACS,EAAjC;AAEAlB,EAAAA,QAAQ,CAAC;AACLO,IAAAA,IAAI,EAAE,kBADD;AAELC,IAAAA,OAAO,EAAEE;AAFJ,GAAD,CAAR;AAIH,CATM;AAWP,OAAO,MAAMS,iBAAiB,GAAG,CAACH,KAAD,EAAQN,UAAR,KAAuB,MAAOV,QAAP,IAAoB;AAExEU,EAAAA,UAAU,CAACU,MAAX,CAAkBJ,KAAlB,EAAyB,CAAzB;AACAhB,EAAAA,QAAQ,CAAC;AACLO,IAAAA,IAAI,EAAE,oBADD;AAELC,IAAAA,OAAO,EAAEE;AAFJ,GAAD,CAAR;AAIH,CAPM","sourcesContent":["import axios from 'axios';\r\nimport { URL_DEFAULT } from '../urls/urls';\r\nconst token = window.localStorage.getItem('token');\r\n\r\nexport const traerRespuestas = () => async (dispacth) => {       \r\n    const instance = axios.create({\r\n        baseURL: URL_DEFAULT + 'answers',        \r\n        headers: { 'Authorization': 'bearer ' + token }\r\n    });\r\n    const respuesta = await instance.get();    \r\n    dispacth({\r\n        type: 'traer_respuestas',\r\n        payload: respuesta.data.respuestas\r\n    })\r\n}\r\n\r\nexport const crearRespuesta = (respuesta, respuestas) => async (dispacth) => {\r\n    \r\n    const instance = axios.create({\r\n        baseURL: URL_DEFAULT + 'answers',        \r\n        headers: { 'Authorization': 'bearer ' + token }\r\n    });\r\n    const r = await instance.post(URL_DEFAULT + 'answers', respuesta);      \r\n    respuestas.push(r.data.respuestas);\r\n    dispacth({\r\n        type: 'crear_respuesta',\r\n        payload: r.data.respuestas\r\n    })\r\n}\r\n\r\nexport const editarRespuesta = (data, respuestas) => async (dispacth) => {\r\n    \r\n    respuestas[data.index].texto = data.texto;\r\n    respuestas[data.index].id = data.id;\r\n    \r\n    dispacth({\r\n        type: 'editar_respuesta',\r\n        payload: respuestas\r\n    })\r\n}\r\n\r\nexport const eliminarRespuesta = (index, respuestas) => async (dispacth) => {\r\n    \r\n    respuestas.splice(index, 1);\r\n    dispacth({\r\n        type: 'eliminar_respuesta',\r\n        payload: respuestas\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}