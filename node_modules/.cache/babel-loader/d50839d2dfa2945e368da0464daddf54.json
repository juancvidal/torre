{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\whitelabel_fe\\\\src\\\\components\\\\dashboard\\\\preguntas\\\\index\\\\IndexPreguntas.js\";\nimport React, { Component } from 'react';\nimport './IndexPreguntas.css';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as preguntasActions from '../../../../actions/preguntasActions';\nimport Spinner from '../../general/Spinner';\n\nclass IndexPreguntas extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      this.props.traerPreguntas(this.props.preguntas);\n      this.props.traerModulos();\n    };\n\n    this.showTable = () => {\n      if (this.props.cargando) return React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"a-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/crearPregunta\",\n        id: \"crear_pregunta\",\n        className: \"valign-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"add\"), \"CREAR\")), React.createElement(\"table\", {\n        id: \"table-users\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"#\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Id\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Texto de la pregunta\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"M\\xF3dulo\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Acciones\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, this.ponerFilas())));\n    };\n\n    this.getNombreModulo = id => {\n      let nombre = '';\n      this.props.modulos.map(m => {\n        if (m.id == id) {\n          nombre = m.nombre;\n        }\n      });\n    };\n\n    this.ponerFilas = () => this.props.preguntas.map((pregunta, index) => React.createElement(\"tr\", {\n      key: pregunta.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, index + 1), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, pregunta.id), React.createElement(\"td\", {\n      dangerouslySetInnerHTML: {\n        __html: pregunta.texto\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.getNombreModulo(pregunta.modulo_id)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Link, {\n      id: \"btn-edit\",\n      to: {\n        pathname: \"/editarPregunta\",\n        id: pregunta.id,\n        texto: pregunta.texto,\n        modulo: pregunta.modulo_id\n      },\n      className: \"valign-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"create\"), \"EDITAR\"))));\n  }\n\n  user_to_edit(e) {\n    console.log(e); //this.props.userToEdit(id);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"index-preguntas\",\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col l12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.showTable()))));\n  }\n\n}\n\nconst mapToStateProps = reducers => {\n  return reducers.preguntasReducers;\n};\n\nexport default connect(mapToStateProps, preguntasActions)(IndexPreguntas);","map":{"version":3,"sources":["C:/wamp64/www/whitelabel_fe/src/components/dashboard/preguntas/index/IndexPreguntas.js"],"names":["React","Component","Link","connect","preguntasActions","Spinner","IndexPreguntas","componentDidMount","props","traerPreguntas","preguntas","traerModulos","showTable","cargando","ponerFilas","getNombreModulo","id","nombre","modulos","map","m","pregunta","index","__html","texto","modulo_id","pathname","modulo","user_to_edit","e","console","log","render","mapToStateProps","reducers","preguntasReducers"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './IndexPreguntas.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport * as preguntasActions from '../../../../actions/preguntasActions';\r\nimport Spinner from '../../general/Spinner';\r\n\r\nclass IndexPreguntas extends Component {\r\n\r\n    \r\n    componentDidMount = () => {\r\n        this.props.traerPreguntas(this.props.preguntas);\r\n        this.props.traerModulos();\r\n    }\r\n\r\n    user_to_edit(e) {\r\n        console.log(e);\r\n        //this.props.userToEdit(id);\r\n    }\r\n\r\n    showTable = () => {\r\n        if (this.props.cargando)\r\n            return <Spinner />;\r\n        return (\r\n            <div>\r\n                <div className=\"a-right\">\r\n                    <Link to='/crearPregunta' id=\"crear_pregunta\" className=\"valign-wrapper\"><i className=\"material-icons\">add</i>CREAR</Link>\r\n                </div>\r\n                <table id=\"table-users\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">#</th>\r\n                            <th scope=\"col\">Id</th>\r\n                            <th scope=\"col\">Texto de la pregunta</th>\r\n                            <th scope=\"col\">Módulo</th>\r\n                            <th scope=\"col\">Acciones</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.ponerFilas()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    getNombreModulo = (id) => {\r\n        let nombre = ''\r\n        this.props.modulos.map((m) => {\r\n            if(m.id == id){\r\n                nombre = m.nombre\r\n            }\r\n        })\r\n    }\r\n\r\n    ponerFilas = () => this.props.preguntas.map((pregunta, index) => (\r\n        <tr key={pregunta.id}>\r\n\r\n            <th scope=\"row\">\r\n                {index + 1}\r\n            </th>\r\n            <td>\r\n                {pregunta.id}\r\n            </td>\r\n            <td dangerouslySetInnerHTML={{__html: pregunta.texto}}>\r\n               \r\n            </td>\r\n            <td>\r\n                {this.getNombreModulo(pregunta.modulo_id)}\r\n            </td>\r\n            <td>\r\n\r\n                <Link id=\"btn-edit\" to={{\r\n                    pathname: \"/editarPregunta\",\r\n                    id: pregunta.id,\r\n                    texto: pregunta.texto,\r\n                    modulo: pregunta.modulo_id\r\n                }} className=\"valign-wrapper\"><i className=\"material-icons\">create</i>EDITAR</Link>\r\n\r\n            </td>\r\n        </tr>\r\n\r\n    ));\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div id=\"index-preguntas\" className=\"row\">\r\n                <div className=\"col l12\">\r\n                    <div className=\"card-panel\">\r\n                        <div className=\"card-content\">\r\n                            {this.showTable()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapToStateProps = (reducers) => {\r\n    return reducers.preguntasReducers;\r\n}\r\nexport default connect(mapToStateProps, preguntasActions)(IndexPreguntas);"]},"metadata":{},"sourceType":"module"}