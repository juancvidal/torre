{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\whitelabel_fe\\\\src\\\\components\\\\dashboard\\\\preguntasTrivia\\\\crear\\\\CrearPreguntaT.js\";\nimport React, { Component } from 'react';\nimport './CrearT.css';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as preguntasTriviaActions from '../../../../actions/preguntasTriviaActions';\n\nclass CrearPreguntaT extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.crear = () => {\n      //let idPregunta = this.props.preguntas; \n      console.log(this.props.preguntasT);\n      let data = {\n        \"id\": this.props.lastId + 1,\n        \"texto\": document.getElementById('texto_preguntaT').value\n      };\n      this.props.crearPreguntaT(data, this.props.preguntasT);\n    };\n  }\n\n  componentDidMount() {}\n  /*ponerGeneros = () => this.state.generos.map((genero, index) => (\r\n      <option value={genero.id_genero}>\r\n          {genero.nombre_genero}\r\n      </option>\r\n  ));*/\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col l12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Crear pregunta\")), React.createElement(\"div\", {\n      className: \"card-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-field col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"texto_preguntaT\",\n      type: \"text\",\n      className: \"validate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"texto_preguntaT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Texto de la pregunta\"))))), React.createElement(\"div\", {\n      className: \"card-action\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"btn btn-primary btn_opts\",\n      onClick: this.crear,\n      to: \"/preguntasT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Guardar\"), React.createElement(Link, {\n      className: \"btn btn-primary btn_opts\",\n      to: \"/preguntasT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Cancelar\")))));\n  }\n\n}\n\nconst mapToStateProps = reducers => {\n  return reducers.preguntasTReducers;\n};\n\nexport default connect(mapToStateProps, preguntasTriviaActions)(CrearPreguntaT);","map":{"version":3,"sources":["C:/wamp64/www/whitelabel_fe/src/components/dashboard/preguntasTrivia/crear/CrearPreguntaT.js"],"names":["React","Component","Link","connect","preguntasTriviaActions","CrearPreguntaT","crear","console","log","props","preguntasT","data","lastId","document","getElementById","value","crearPreguntaT","componentDidMount","render","mapToStateProps","reducers","preguntasTReducers"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,sBAAZ,MAAwC,4CAAxC;;AAEA,MAAMC,cAAN,SAA6BJ,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SAInCK,KAJmC,GAI3B,MAAM;AACV;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,UAAvB;AACA,UAAIC,IAAI,GAAG;AACP,cAAM,KAAKF,KAAL,CAAWG,MAAX,GAAoB,CADnB;AAEP,iBAASC,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,EAA2CC;AAF7C,OAAX;AAIA,WAAKN,KAAL,CAAWO,cAAX,CAA0BL,IAA1B,EAAgC,KAAKF,KAAL,CAAWC,UAA3C;AAEH,KAbkC;AAAA;;AAenCO,EAAAA,iBAAiB,GAAG,CAGnB;AAED;;;;;;;AAMAC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA5B,CADJ,EAEI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,EAAE,EAAC,iBAAV;AAA4B,MAAA,IAAI,EAAC,MAAjC;AAAwC,MAAA,SAAS,EAAC,UAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAO,MAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFJ,CAFJ,CADJ,CADJ,CAFJ,EAaI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,0BAAhB;AAA2C,MAAA,OAAO,EAAE,KAAKZ,KAAzD;AAAgE,MAAA,EAAE,EAAC,aAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,0BAAhB;AAA2C,MAAA,EAAE,EAAC,aAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CAbJ,CADJ,CADJ,CADJ;AAyBH;;AApDkC;;AAuDvC,MAAMa,eAAe,GAAIC,QAAD,IAAc;AAClC,SAAOA,QAAQ,CAACC,kBAAhB;AACH,CAFD;;AAGA,eAAelB,OAAO,CAACgB,eAAD,EAAkBf,sBAAlB,CAAP,CAAiDC,cAAjD,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport './CrearT.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport * as preguntasTriviaActions from '../../../../actions/preguntasTriviaActions';\r\n\r\nclass CrearPreguntaT extends Component {\r\n\r\n\r\n\r\n    crear = () => {\r\n        //let idPregunta = this.props.preguntas; \r\n        console.log(this.props.preguntasT);\r\n        let data = {\r\n            \"id\": this.props.lastId + 1,\r\n            \"texto\": document.getElementById('texto_preguntaT').value\r\n        }\r\n        this.props.crearPreguntaT(data, this.props.preguntasT);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n\r\n    }\r\n\r\n    /*ponerGeneros = () => this.state.generos.map((genero, index) => (\r\n        <option value={genero.id_genero}>\r\n            {genero.nombre_genero}\r\n        </option>\r\n    ));*/\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col l12\">\r\n                    <div className=\"card-panel\">\r\n                        <div className=\"card-title\"><h5>Crear pregunta</h5></div>\r\n                        <div className=\"card-content\">\r\n                            <div className=\"row\">\r\n                                <form className=\"col s6\">\r\n\r\n                                    <div className=\"input-field col s6\">\r\n                                        <input id=\"texto_preguntaT\" type=\"text\" className=\"validate\" />\r\n                                        <label htmlFor=\"texto_preguntaT\">Texto de la pregunta</label>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-action\">\r\n                            <Link className=\"btn btn-primary btn_opts\" onClick={this.crear} to='/preguntasT'>Guardar</Link>\r\n                            <Link className=\"btn btn-primary btn_opts\" to='/preguntasT'>Cancelar</Link>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapToStateProps = (reducers) => {\r\n    return reducers.preguntasTReducers;\r\n}\r\nexport default connect(mapToStateProps, preguntasTriviaActions)(CrearPreguntaT);"]},"metadata":{},"sourceType":"module"}