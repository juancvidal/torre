{"ast":null,"code":"import axios from 'axios';\nexport const traerPreguntas = preguntas => dispacth => {\n  dispacth({\n    type: 'traer_preguntas',\n    payload: preguntas\n  });\n};\nexport const crearUsuario = (data, usuarios) => async dispacth => {\n  const instance = axios.create({\n    baseURL: 'http://localhost:8000/api/create',\n    timeout: 1000,\n    headers: {\n      'Authorization': 'Bearer ' + token\n    }\n  });\n  const respuesta = await instance.post('http://localhost:8000/api/create', data);\n  usuarios.push(respuesta.data.user);\n  dispacth({\n    type: 'crear_usuario',\n    payload: usuarios\n  });\n};\nexport const editarUsuario = data => async dispacth => {\n  const instance = axios.create({\n    baseURL: 'http://localhost:8000/api/update',\n    timeout: 1000,\n    headers: {\n      'Authorization': 'Bearer ' + token\n    }\n  });\n  await instance.post('http://localhost:8000/api/update', data);\n  const respuesta = await instance.get('http://localhost:8000/api/users');\n  dispacth({\n    type: 'editar_usuario',\n    payload: respuesta.data.users\n  });\n};\nexport const eliminarUsuario = id => async dispacth => {\n  const instance = axios.create({\n    baseURL: 'http://localhost:8000/api/delete',\n    timeout: 1000,\n    headers: {\n      'Authorization': 'Bearer ' + token\n    }\n  });\n  await instance.post('http://localhost:8000/api/delete', {\n    \"id\": id\n  });\n  const respuesta = await instance.get('http://localhost:8000/api/users');\n  dispacth({\n    type: 'eliminar_usuario',\n    payload: respuesta.data.users\n  });\n};","map":{"version":3,"sources":["C:/wamp64/www/whitelabel_fe/src/actions/preguntasActions.js"],"names":["axios","traerPreguntas","preguntas","dispacth","type","payload","crearUsuario","data","usuarios","instance","create","baseURL","timeout","headers","token","respuesta","post","push","user","editarUsuario","get","users","eliminarUsuario","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,OAAO,MAAMC,cAAc,GAAIC,SAAD,IAAgBC,QAAD,IAAc;AAEvDA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAE,iBADD;AAELC,IAAAA,OAAO,EAAEH;AAFJ,GAAD,CAAR;AAIH,CANM;AAQP,OAAO,MAAMI,YAAY,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB,MAAOL,QAAP,IAAoB;AAEhE,QAAMM,QAAQ,GAAGT,KAAK,CAACU,MAAN,CAAa;AAC1BC,IAAAA,OAAO,EAAE,kCADiB;AAE1BC,IAAAA,OAAO,EAAE,IAFiB;AAG1BC,IAAAA,OAAO,EAAE;AAAE,uBAAiB,YAAYC;AAA/B;AAHiB,GAAb,CAAjB;AAKA,QAAMC,SAAS,GAAG,MAAMN,QAAQ,CAACO,IAAT,CAAc,kCAAd,EAAkDT,IAAlD,CAAxB;AACAC,EAAAA,QAAQ,CAACS,IAAT,CAAcF,SAAS,CAACR,IAAV,CAAeW,IAA7B;AACAf,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAE,eADD;AAELC,IAAAA,OAAO,EAAEG;AAFJ,GAAD,CAAR;AAIH,CAbM;AAeP,OAAO,MAAMW,aAAa,GAAIZ,IAAD,IAAU,MAAOJ,QAAP,IAAoB;AAEvD,QAAMM,QAAQ,GAAGT,KAAK,CAACU,MAAN,CAAa;AAC1BC,IAAAA,OAAO,EAAE,kCADiB;AAE1BC,IAAAA,OAAO,EAAE,IAFiB;AAG1BC,IAAAA,OAAO,EAAE;AAAE,uBAAiB,YAAYC;AAA/B;AAHiB,GAAb,CAAjB;AAMA,QAAML,QAAQ,CAACO,IAAT,CAAc,kCAAd,EAAkDT,IAAlD,CAAN;AACA,QAAMQ,SAAS,GAAG,MAAMN,QAAQ,CAACW,GAAT,CAAa,iCAAb,CAAxB;AAEAjB,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAE,gBADD;AAELC,IAAAA,OAAO,EAAEU,SAAS,CAACR,IAAV,CAAec;AAFnB,GAAD,CAAR;AAIH,CAfM;AAiBP,OAAO,MAAMC,eAAe,GAAIC,EAAD,IAAQ,MAAOpB,QAAP,IAAoB;AAEvD,QAAMM,QAAQ,GAAGT,KAAK,CAACU,MAAN,CAAa;AAC1BC,IAAAA,OAAO,EAAE,kCADiB;AAE1BC,IAAAA,OAAO,EAAE,IAFiB;AAG1BC,IAAAA,OAAO,EAAE;AAAE,uBAAiB,YAAYC;AAA/B;AAHiB,GAAb,CAAjB;AAMA,QAAML,QAAQ,CAACO,IAAT,CAAc,kCAAd,EAAkD;AAAE,UAAMO;AAAR,GAAlD,CAAN;AAEA,QAAMR,SAAS,GAAG,MAAMN,QAAQ,CAACW,GAAT,CAAa,iCAAb,CAAxB;AACAjB,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAE,kBADD;AAELC,IAAAA,OAAO,EAAEU,SAAS,CAACR,IAAV,CAAec;AAFnB,GAAD,CAAR;AAIH,CAfM","sourcesContent":["import axios from 'axios';\r\n\r\n\r\n\r\nexport const traerPreguntas = (preguntas) => (dispacth) => {       \r\n    \r\n    dispacth({\r\n        type: 'traer_preguntas',\r\n        payload: preguntas\r\n    })\r\n}\r\n\r\nexport const crearUsuario = (data, usuarios) => async (dispacth) => {\r\n    \r\n    const instance = axios.create({\r\n        baseURL: 'http://localhost:8000/api/create',\r\n        timeout: 1000,\r\n        headers: { 'Authorization': 'Bearer ' + token }\r\n    });\r\n    const respuesta = await instance.post('http://localhost:8000/api/create', data);   \r\n    usuarios.push(respuesta.data.user);\r\n    dispacth({\r\n        type: 'crear_usuario',\r\n        payload: usuarios\r\n    })\r\n}\r\n\r\nexport const editarUsuario = (data) => async (dispacth) => {\r\n    \r\n    const instance = axios.create({\r\n        baseURL: 'http://localhost:8000/api/update',\r\n        timeout: 1000,\r\n        headers: { 'Authorization': 'Bearer ' + token }\r\n    });\r\n\r\n    await instance.post('http://localhost:8000/api/update', data);\r\n    const respuesta = await instance.get('http://localhost:8000/api/users');     \r\n\r\n    dispacth({\r\n        type: 'editar_usuario',\r\n        payload: respuesta.data.users\r\n    })\r\n}\r\n\r\nexport const eliminarUsuario = (id) => async (dispacth) => {\r\n    \r\n    const instance = axios.create({\r\n        baseURL: 'http://localhost:8000/api/delete',\r\n        timeout: 1000,\r\n        headers: { 'Authorization': 'Bearer ' + token }\r\n    });\r\n\r\n    await instance.post('http://localhost:8000/api/delete', { \"id\": id });\r\n    \r\n    const respuesta = await instance.get('http://localhost:8000/api/users');  \r\n    dispacth({\r\n        type: 'eliminar_usuario',\r\n        payload: respuesta.data.users\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}