{"ast":null,"code":"import axios from 'axios';\nimport { URL_, URL_DEFAULTDEFURL_DEFAULT } from '../urls/urls';\nconst token = window.localStorage.getItem('token');\nexport const traerTodos = () => async dispacth => {\n  const instance = axios.create({\n    baseURL: URL_DEFAULT + 'users',\n    timeout: 1000,\n    headers: {\n      'Authorization': 'Bearer ' + token\n    }\n  });\n  const respuesta = await instance.get(URL_DEFAULT + 'users');\n  dispacth({\n    type: 'traer_usuarios',\n    payload: respuesta.data.users\n  });\n};\nexport const crearUsuario = (data, usuarios) => async dispacth => {\n  const instance = axios.create({\n    baseURL: URL_DEFAULT + 'create',\n    timeout: 1000,\n    headers: {\n      'Authorization': 'Bearer ' + token\n    }\n  });\n  const respuesta = await instance.post(URL_DEFAULT + 'create', data);\n  usuarios.push(respuesta.data.user);\n  dispacth({\n    type: 'crear_usuario',\n    payload: usuarios\n  });\n};\nexport const editarUsuario = data => async dispacth => {\n  const instance = axios.create({\n    baseURL: URL_DEFAULT + 'update',\n    timeout: 1000,\n    headers: {\n      'Authorization': 'Bearer ' + token\n    }\n  });\n  await instance.post(URL_DEFAULT + 'update', data);\n  const respuesta = await instance.get(URL_DEFAULT + 'users');\n  dispacth({\n    type: 'editar_usuario',\n    payload: respuesta.data.users\n  });\n};\nexport const eliminarUsuario = id => async dispacth => {\n  const instance = axios.create({\n    baseURL: URL_DEFAULT + 'delete',\n    timeout: 1000,\n    headers: {\n      'Authorization': 'Bearer ' + token\n    }\n  });\n  await instance.post(URL_DEFAULT + 'delete', {\n    \"id\": id\n  });\n  const respuesta = await instance.get(URL_DEFAULT + 'users');\n  dispacth({\n    type: 'eliminar_usuario',\n    payload: respuesta.data.users\n  });\n};","map":{"version":3,"sources":["C:/wamp64/www/whitelabel_fe/src/actions/usuariosActions.js"],"names":["axios","URL_","URL_DEFAULTDEFURL_DEFAULT","token","window","localStorage","getItem","traerTodos","dispacth","instance","create","baseURL","URL_DEFAULT","timeout","headers","respuesta","get","type","payload","data","users","crearUsuario","usuarios","post","push","user","editarUsuario","eliminarUsuario","id"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { URL_, URL_DEFAULTDEFURL_DEFAULT } from '../urls/urls';\r\nconst token = window.localStorage.getItem('token');\r\n\r\nexport const traerTodos = () => async (dispacth) => {   \r\n    const instance = axios.create({\r\n        baseURL: URL_DEFAULT + 'users',\r\n        timeout: 1000,\r\n        headers: { 'Authorization': 'Bearer ' + token }\r\n    });\r\n    const respuesta = await instance.get(URL_DEFAULT + 'users');    \r\n    \r\n    dispacth({\r\n        type: 'traer_usuarios',\r\n        payload: respuesta.data.users\r\n    })\r\n}\r\n\r\nexport const crearUsuario = (data, usuarios) => async (dispacth) => {\r\n    \r\n    const instance = axios.create({\r\n        baseURL: URL_DEFAULT + 'create',\r\n        timeout: 1000,\r\n        headers: { 'Authorization': 'Bearer ' + token }\r\n    });\r\n    const respuesta = await instance.post(URL_DEFAULT + 'create', data);   \r\n    usuarios.push(respuesta.data.user);\r\n    dispacth({\r\n        type: 'crear_usuario',\r\n        payload: usuarios\r\n    })\r\n}\r\n\r\nexport const editarUsuario = (data) => async (dispacth) => {\r\n    \r\n    const instance = axios.create({\r\n        baseURL: URL_DEFAULT + 'update',\r\n        timeout: 1000,\r\n        headers: { 'Authorization': 'Bearer ' + token }\r\n    });\r\n\r\n    await instance.post(URL_DEFAULT + 'update', data);\r\n    const respuesta = await instance.get(URL_DEFAULT + 'users');     \r\n\r\n    dispacth({\r\n        type: 'editar_usuario',\r\n        payload: respuesta.data.users\r\n    })\r\n}\r\n\r\nexport const eliminarUsuario = (id) => async (dispacth) => {\r\n    \r\n    const instance = axios.create({\r\n        baseURL: URL_DEFAULT + 'delete',\r\n        timeout: 1000,\r\n        headers: { 'Authorization': 'Bearer ' + token }\r\n    });\r\n\r\n    await instance.post(URL_DEFAULT + 'delete', { \"id\": id });\r\n    \r\n    const respuesta = await instance.get(URL_DEFAULT + 'users');  \r\n    dispacth({\r\n        type: 'eliminar_usuario',\r\n        payload: respuesta.data.users\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}