{"ast":null,"code":"import axios from 'axios';\nimport { URL_DEFAULT } from '../urls/urls';\nconst token = window.localStorage.getItem('token');\nconst url = URL_DEFAULT + 'answersTrivia';\nconst instance = axios.create({\n  baseURL: url,\n  headers: {\n    'Authorization': 'bearer ' + token\n  }\n});\nexport const traerRespuestasT = () => async dispacth => {\n  dispacth({\n    type: 'cargando'\n  });\n  const respuesta = await instance.get();\n  dispacth({\n    type: 'traer_respuestasT',\n    payload: respuesta.data.respuestas\n  });\n};\nexport const crearRespuestaT = (respuesta, respuestas) => async dispacth => {\n  const r = await instance.post(url, respuesta);\n  respuestas.push(r.data.respuesta);\n  dispacth({\n    type: 'crear_respuestaT',\n    payload: respuestas\n  });\n};\nexport const editarRespuestaT = data => async dispacth => {\n  await instance.put(url, data);\n  const respuesta = await instance.get();\n  dispacth({\n    type: 'editar_respuestaT',\n    payload: respuesta.data.respuestas\n  });\n};\nexport const eliminarRespuestaT = id => async dispacth => {\n  await instance.delete(url, {\n    params: {\n      \"id\": id\n    }\n  });\n  const respuesta = await instance.get();\n  dispacth({\n    type: 'eliminar_respuestaT',\n    payload: respuesta.data.respuestas\n  });\n};","map":{"version":3,"sources":["C:/wamp64/www/whitelabel_fe/src/actions/respuestasTriviaActions.js"],"names":["axios","URL_DEFAULT","token","window","localStorage","getItem","url","instance","create","baseURL","headers","traerRespuestasT","dispacth","type","respuesta","get","payload","data","respuestas","crearRespuestaT","r","post","push","editarRespuestaT","put","eliminarRespuestaT","id","delete","params"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,MAAMC,KAAK,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAd;AACA,MAAMC,GAAG,GAAGL,WAAW,GAAG,eAA1B;AACA,MAAMM,QAAQ,GAAGP,KAAK,CAACQ,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAEH,GADiB;AAE1BI,EAAAA,OAAO,EAAE;AAAE,qBAAiB,YAAYR;AAA/B;AAFiB,CAAb,CAAjB;AAIA,OAAO,MAAMS,gBAAgB,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACtDA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAE;AADD,GAAD,CAAR;AAIA,QAAMC,SAAS,GAAG,MAAMP,QAAQ,CAACQ,GAAT,EAAxB;AACAH,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAE,mBADD;AAELG,IAAAA,OAAO,EAAEF,SAAS,CAACG,IAAV,CAAeC;AAFnB,GAAD,CAAR;AAIH,CAVM;AAYP,OAAO,MAAMC,eAAe,GAAG,CAACL,SAAD,EAAYI,UAAZ,KAA2B,MAAON,QAAP,IAAoB;AAG1E,QAAMQ,CAAC,GAAG,MAAMb,QAAQ,CAACc,IAAT,CAAcf,GAAd,EAAmBQ,SAAnB,CAAhB;AACAI,EAAAA,UAAU,CAACI,IAAX,CAAgBF,CAAC,CAACH,IAAF,CAAOH,SAAvB;AACAF,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAE,kBADD;AAELG,IAAAA,OAAO,EAAEE;AAFJ,GAAD,CAAR;AAIH,CATM;AAWP,OAAO,MAAMK,gBAAgB,GAAIN,IAAD,IAAU,MAAOL,QAAP,IAAoB;AAG1D,QAAML,QAAQ,CAACiB,GAAT,CAAalB,GAAb,EAAkBW,IAAlB,CAAN;AACA,QAAMH,SAAS,GAAG,MAAMP,QAAQ,CAACQ,GAAT,EAAxB;AAEAH,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAE,mBADD;AAELG,IAAAA,OAAO,EAAEF,SAAS,CAACG,IAAV,CAAeC;AAFnB,GAAD,CAAR;AAIH,CAVM;AAYP,OAAO,MAAMO,kBAAkB,GAAIC,EAAD,IAAQ,MAAOd,QAAP,IAAoB;AAG1D,QAAML,QAAQ,CAACoB,MAAT,CAAgBrB,GAAhB,EAAqB;AAAEsB,IAAAA,MAAM,EAAE;AAAC,YAAMF;AAAP;AAAV,GAArB,CAAN;AAEA,QAAMZ,SAAS,GAAG,MAAMP,QAAQ,CAACQ,GAAT,EAAxB;AAEAH,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAE,qBADD;AAELG,IAAAA,OAAO,EAAEF,SAAS,CAACG,IAAV,CAAeC;AAFnB,GAAD,CAAR;AAIH,CAXM","sourcesContent":["import axios from 'axios';\r\nimport { URL_DEFAULT } from '../urls/urls';\r\nconst token = window.localStorage.getItem('token');\r\nconst url = URL_DEFAULT + 'answersTrivia';\r\nconst instance = axios.create({\r\n    baseURL: url,        \r\n    headers: { 'Authorization': 'bearer ' + token }\r\n});\r\nexport const traerRespuestasT = () => async (dispacth) => {       \r\n    dispacth({\r\n        type: 'cargando'\r\n        \r\n    })\r\n    const respuesta = await instance.get();    \r\n    dispacth({\r\n        type: 'traer_respuestasT',\r\n        payload: respuesta.data.respuestas\r\n    })\r\n}\r\n\r\nexport const crearRespuestaT = (respuesta, respuestas) => async (dispacth) => {\r\n    \r\n   \r\n    const r = await instance.post(url, respuesta);      \r\n    respuestas.push(r.data.respuesta);\r\n    dispacth({\r\n        type: 'crear_respuestaT',\r\n        payload: respuestas\r\n    })\r\n}\r\n\r\nexport const editarRespuestaT = (data) => async (dispacth) => {\r\n    \r\n    \r\n    await instance.put(url, data);\r\n    const respuesta = await instance.get();   \r\n    \r\n    dispacth({\r\n        type: 'editar_respuestaT',\r\n        payload: respuesta.data.respuestas\r\n    })\r\n}\r\n\r\nexport const eliminarRespuestaT = (id) => async (dispacth) => {\r\n    \r\n   \r\n    await instance.delete(url, { params: {\"id\": id }} );\r\n    \r\n    const respuesta = await instance.get();  \r\n    \r\n    dispacth({\r\n        type: 'eliminar_respuestaT',\r\n        payload: respuesta.data.respuestas\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}